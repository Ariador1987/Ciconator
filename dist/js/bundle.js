"use strict";!function(){var __webpack_modules__={"./src/js/accordion.js":function srcJsAccordionJs(){eval('const accordions = document.querySelectorAll(".accordion");\r\nconst accordionContents = document.querySelectorAll(".accordion-content");\r\n\r\naccordions.forEach((acc) =>\r\n    acc.addEventListener("click", (e) => {\r\n        handleAccordions(acc, e);\r\n    })\r\n);\r\n\r\nfunction handleAccordions(accordion, event) {\r\n    if (!event.target.classList.contains("accordion-heading--icon")) return;\r\n\r\n    event.target.textContent.trim() === "+"\r\n        ? (event.target.textContent = "-")\r\n        : (event.target.textContent = "+");\r\n\r\n    if (\r\n        accordion.firstElementChild.nextElementSibling.classList.contains(\r\n            "hidden"\r\n        )\r\n    ) {\r\n        accordion.firstElementChild.nextElementSibling.classList.remove(\r\n            "hidden"\r\n        );\r\n        accordion.firstElementChild.nextElementSibling.classList.add("show");\r\n    } else {\r\n        accordion.firstElementChild.nextElementSibling.classList.remove("show");\r\n        accordion.firstElementChild.nextElementSibling.classList.add("hidden");\r\n    }\r\n}\r\n\r\nwindow.addEventListener("DOMContentLoaded", () => {\r\n    [...accordionContents].forEach((el) => el.classList.add("hidden"));\r\n});\r\n\n\n//# sourceURL=webpack://gulpstarter/./src/js/accordion.js?')},"./src/js/counter.js":function srcJsCounterJs(){eval('const counters = document.querySelectorAll(".counter__item--number");\r\nconst counterEl = document.querySelector(".counter");\r\nlet wasCounted = false;\r\n\r\nconst obsCb = (entries, observer) => {\r\n    const [entry] = entries;\r\n    if (entry.isIntersecting && !wasCounted) {\r\n        startCounting();\r\n        observer.disconnect();\r\n    }\r\n};\r\nconst obsOptions = {\r\n    root: null,\r\n    threshold: 0.45,\r\n};\r\n\r\nconst observer = new IntersectionObserver(obsCb, obsOptions);\r\nobserver.observe(counterEl);\r\n\r\nconst startCounting = () => {\r\n    counters.forEach((counter) => {\r\n        counter.textContent = "0";\r\n\r\n        const updateCounter = () => {\r\n            const target = +counter.getAttribute("data-target");\r\n\r\n            const c = +counter.textContent;\r\n\r\n            const increment = target / 100;\r\n\r\n            if (c < target) {\r\n                counter.textContent = `${Math.ceil(c + increment)}`;\r\n                setTimeout(updateCounter, 1);\r\n            } else {\r\n                counter.textContent = target + "+";\r\n            }\r\n        };\r\n\r\n        updateCounter();\r\n        wasCounted = true;\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gulpstarter/./src/js/counter.js?')},"./src/js/glightbox.js":function srcJsGlightboxJs(module){eval('!(function (e, t) {\r\n     true\r\n        ? (module.exports = t())\r\n        : 0;\r\n})(this, function () {\r\n    "use strict";\r\n    function e(t) {\r\n        return (e =\r\n            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator\r\n                ? function (e) {\r\n                      return typeof e;\r\n                  }\r\n                : function (e) {\r\n                      return e &&\r\n                          "function" == typeof Symbol &&\r\n                          e.constructor === Symbol &&\r\n                          e !== Symbol.prototype\r\n                          ? "symbol"\r\n                          : typeof e;\r\n                  })(t);\r\n    }\r\n    function t(e, t) {\r\n        if (!(e instanceof t))\r\n            throw new TypeError("Cannot call a class as a function");\r\n    }\r\n    function i(e, t) {\r\n        for (var i = 0; i < t.length; i++) {\r\n            var n = t[i];\r\n            (n.enumerable = n.enumerable || !1),\r\n                (n.configurable = !0),\r\n                "value" in n && (n.writable = !0),\r\n                Object.defineProperty(e, n.key, n);\r\n        }\r\n    }\r\n    function n(e, t, n) {\r\n        return t && i(e.prototype, t), n && i(e, n), e;\r\n    }\r\n    var s = Date.now();\r\n    function l() {\r\n        var e = {},\r\n            t = !0,\r\n            i = 0,\r\n            n = arguments.length;\r\n        "[object Boolean]" === Object.prototype.toString.call(arguments[0]) &&\r\n            ((t = arguments[0]), i++);\r\n        for (\r\n            var s = function (i) {\r\n                for (var n in i)\r\n                    Object.prototype.hasOwnProperty.call(i, n) &&\r\n                        (t &&\r\n                        "[object Object]" ===\r\n                            Object.prototype.toString.call(i[n])\r\n                            ? (e[n] = l(!0, e[n], i[n]))\r\n                            : (e[n] = i[n]));\r\n            };\r\n            i < n;\r\n            i++\r\n        ) {\r\n            var o = arguments[i];\r\n            s(o);\r\n        }\r\n        return e;\r\n    }\r\n    function o(e, t) {\r\n        if (\r\n            ((k(e) || e === window || e === document) && (e = [e]),\r\n            A(e) || L(e) || (e = [e]),\r\n            0 != P(e))\r\n        )\r\n            if (A(e) && !L(e))\r\n                for (\r\n                    var i = e.length, n = 0;\r\n                    n < i && !1 !== t.call(e[n], e[n], n, e);\r\n                    n++\r\n                );\r\n            else if (L(e))\r\n                for (var s in e)\r\n                    if (O(e, s) && !1 === t.call(e[s], e[s], s, e)) break;\r\n    }\r\n    function r(e) {\r\n        var t =\r\n                arguments.length > 1 && void 0 !== arguments[1]\r\n                    ? arguments[1]\r\n                    : null,\r\n            i =\r\n                arguments.length > 2 && void 0 !== arguments[2]\r\n                    ? arguments[2]\r\n                    : null,\r\n            n = (e[s] = e[s] || []),\r\n            l = { all: n, evt: null, found: null };\r\n        return (\r\n            t &&\r\n                i &&\r\n                P(n) > 0 &&\r\n                o(n, function (e, n) {\r\n                    if (e.eventName == t && e.fn.toString() == i.toString())\r\n                        return (l.found = !0), (l.evt = n), !1;\r\n                }),\r\n            l\r\n        );\r\n    }\r\n    function a(e) {\r\n        var t =\r\n                arguments.length > 1 && void 0 !== arguments[1]\r\n                    ? arguments[1]\r\n                    : {},\r\n            i = t.onElement,\r\n            n = t.withCallback,\r\n            s = t.avoidDuplicate,\r\n            l = void 0 === s || s,\r\n            a = t.once,\r\n            h = void 0 !== a && a,\r\n            d = t.useCapture,\r\n            c = void 0 !== d && d,\r\n            u = arguments.length > 2 ? arguments[2] : void 0,\r\n            g = i || [];\r\n        function v(e) {\r\n            T(n) && n.call(u, e, this), h && v.destroy();\r\n        }\r\n        return (\r\n            C(g) && (g = document.querySelectorAll(g)),\r\n            (v.destroy = function () {\r\n                o(g, function (t) {\r\n                    var i = r(t, e, v);\r\n                    i.found && i.all.splice(i.evt, 1),\r\n                        t.removeEventListener && t.removeEventListener(e, v, c);\r\n                });\r\n            }),\r\n            o(g, function (t) {\r\n                var i = r(t, e, v);\r\n                ((t.addEventListener && l && !i.found) || !l) &&\r\n                    (t.addEventListener(e, v, c),\r\n                    i.all.push({ eventName: e, fn: v }));\r\n            }),\r\n            v\r\n        );\r\n    }\r\n    function h(e, t) {\r\n        o(t.split(" "), function (t) {\r\n            return e.classList.add(t);\r\n        });\r\n    }\r\n    function d(e, t) {\r\n        o(t.split(" "), function (t) {\r\n            return e.classList.remove(t);\r\n        });\r\n    }\r\n    function c(e, t) {\r\n        return e.classList.contains(t);\r\n    }\r\n    function u(e, t) {\r\n        for (; e !== document.body; ) {\r\n            if (!(e = e.parentElement)) return !1;\r\n            if (\r\n                "function" == typeof e.matches\r\n                    ? e.matches(t)\r\n                    : e.msMatchesSelector(t)\r\n            )\r\n                return e;\r\n        }\r\n    }\r\n    function g(e) {\r\n        var t =\r\n                arguments.length > 1 && void 0 !== arguments[1]\r\n                    ? arguments[1]\r\n                    : "",\r\n            i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\r\n        if (!e || "" === t) return !1;\r\n        if ("none" == t) return T(i) && i(), !1;\r\n        var n = x(),\r\n            s = t.split(" ");\r\n        o(s, function (t) {\r\n            h(e, "g" + t);\r\n        }),\r\n            a(n, {\r\n                onElement: e,\r\n                avoidDuplicate: !1,\r\n                once: !0,\r\n                withCallback: function (e, t) {\r\n                    o(s, function (e) {\r\n                        d(t, "g" + e);\r\n                    }),\r\n                        T(i) && i();\r\n                },\r\n            });\r\n    }\r\n    function v(e) {\r\n        var t =\r\n            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";\r\n        if ("" == t)\r\n            return (\r\n                (e.style.webkitTransform = ""),\r\n                (e.style.MozTransform = ""),\r\n                (e.style.msTransform = ""),\r\n                (e.style.OTransform = ""),\r\n                (e.style.transform = ""),\r\n                !1\r\n            );\r\n        (e.style.webkitTransform = t),\r\n            (e.style.MozTransform = t),\r\n            (e.style.msTransform = t),\r\n            (e.style.OTransform = t),\r\n            (e.style.transform = t);\r\n    }\r\n    function f(e) {\r\n        e.style.display = "block";\r\n    }\r\n    function p(e) {\r\n        e.style.display = "none";\r\n    }\r\n    function m(e) {\r\n        var t = document.createDocumentFragment(),\r\n            i = document.createElement("div");\r\n        for (i.innerHTML = e; i.firstChild; ) t.appendChild(i.firstChild);\r\n        return t;\r\n    }\r\n    function y() {\r\n        return {\r\n            width:\r\n                window.innerWidth ||\r\n                document.documentElement.clientWidth ||\r\n                document.body.clientWidth,\r\n            height:\r\n                window.innerHeight ||\r\n                document.documentElement.clientHeight ||\r\n                document.body.clientHeight,\r\n        };\r\n    }\r\n    function x() {\r\n        var e,\r\n            t = document.createElement("fakeelement"),\r\n            i = {\r\n                animation: "animationend",\r\n                OAnimation: "oAnimationEnd",\r\n                MozAnimation: "animationend",\r\n                WebkitAnimation: "webkitAnimationEnd",\r\n            };\r\n        for (e in i) if (void 0 !== t.style[e]) return i[e];\r\n    }\r\n    function b(e, t, i, n) {\r\n        if (e()) t();\r\n        else {\r\n            var s;\r\n            i || (i = 100);\r\n            var l = setInterval(function () {\r\n                e() && (clearInterval(l), s && clearTimeout(s), t());\r\n            }, i);\r\n            n &&\r\n                (s = setTimeout(function () {\r\n                    clearInterval(l);\r\n                }, n));\r\n        }\r\n    }\r\n    function S(e, t, i) {\r\n        if (I(e)) console.error("Inject assets error");\r\n        else if ((T(t) && ((i = t), (t = !1)), C(t) && t in window))\r\n            T(i) && i();\r\n        else {\r\n            var n;\r\n            if (-1 !== e.indexOf(".css")) {\r\n                if (\r\n                    (n = document.querySelectorAll(\'link[href="\' + e + \'"]\')) &&\r\n                    n.length > 0\r\n                )\r\n                    return void (T(i) && i());\r\n                var s = document.getElementsByTagName("head")[0],\r\n                    l = s.querySelectorAll(\'link[rel="stylesheet"]\'),\r\n                    o = document.createElement("link");\r\n                return (\r\n                    (o.rel = "stylesheet"),\r\n                    (o.type = "text/css"),\r\n                    (o.href = e),\r\n                    (o.media = "all"),\r\n                    l ? s.insertBefore(o, l[0]) : s.appendChild(o),\r\n                    void (T(i) && i())\r\n                );\r\n            }\r\n            if (\r\n                (n = document.querySelectorAll(\'script[src="\' + e + \'"]\')) &&\r\n                n.length > 0\r\n            ) {\r\n                if (T(i)) {\r\n                    if (C(t))\r\n                        return (\r\n                            b(\r\n                                function () {\r\n                                    return void 0 !== window[t];\r\n                                },\r\n                                function () {\r\n                                    i();\r\n                                }\r\n                            ),\r\n                            !1\r\n                        );\r\n                    i();\r\n                }\r\n            } else {\r\n                var r = document.createElement("script");\r\n                (r.type = "text/javascript"),\r\n                    (r.src = e),\r\n                    (r.onload = function () {\r\n                        if (T(i)) {\r\n                            if (C(t))\r\n                                return (\r\n                                    b(\r\n                                        function () {\r\n                                            return void 0 !== window[t];\r\n                                        },\r\n                                        function () {\r\n                                            i();\r\n                                        }\r\n                                    ),\r\n                                    !1\r\n                                );\r\n                            i();\r\n                        }\r\n                    }),\r\n                    document.body.appendChild(r);\r\n            }\r\n        }\r\n    }\r\n    function w() {\r\n        return (\r\n            "navigator" in window &&\r\n            window.navigator.userAgent.match(\r\n                /(iPad)|(iPhone)|(iPod)|(Android)|(PlayBook)|(BB10)|(BlackBerry)|(Opera Mini)|(IEMobile)|(webOS)|(MeeGo)/i\r\n            )\r\n        );\r\n    }\r\n    function T(e) {\r\n        return "function" == typeof e;\r\n    }\r\n    function C(e) {\r\n        return "string" == typeof e;\r\n    }\r\n    function k(e) {\r\n        return !(!e || !e.nodeType || 1 != e.nodeType);\r\n    }\r\n    function E(e) {\r\n        return Array.isArray(e);\r\n    }\r\n    function A(e) {\r\n        return e && e.length && isFinite(e.length);\r\n    }\r\n    function L(t) {\r\n        return "object" === e(t) && null != t && !T(t) && !E(t);\r\n    }\r\n    function I(e) {\r\n        return null == e;\r\n    }\r\n    function O(e, t) {\r\n        return null !== e && hasOwnProperty.call(e, t);\r\n    }\r\n    function P(e) {\r\n        if (L(e)) {\r\n            if (e.keys) return e.keys().length;\r\n            var t = 0;\r\n            for (var i in e) O(e, i) && t++;\r\n            return t;\r\n        }\r\n        return e.length;\r\n    }\r\n    function M(e) {\r\n        return !isNaN(parseFloat(e)) && isFinite(e);\r\n    }\r\n    function z() {\r\n        var e =\r\n                arguments.length > 0 && void 0 !== arguments[0]\r\n                    ? arguments[0]\r\n                    : -1,\r\n            t = document.querySelectorAll(\r\n                ".gbtn[data-taborder]:not(.disabled)"\r\n            );\r\n        if (!t.length) return !1;\r\n        if (1 == t.length) return t[0];\r\n        "string" == typeof e && (e = parseInt(e));\r\n        var i = [];\r\n        o(t, function (e) {\r\n            i.push(e.getAttribute("data-taborder"));\r\n        });\r\n        var n = Math.max.apply(\r\n                Math,\r\n                i.map(function (e) {\r\n                    return parseInt(e);\r\n                })\r\n            ),\r\n            s = e < 0 ? 1 : e + 1;\r\n        s > n && (s = "1");\r\n        var l = i.filter(function (e) {\r\n                return e >= parseInt(s);\r\n            }),\r\n            r = l.sort()[0];\r\n        return document.querySelector(\'.gbtn[data-taborder="\'.concat(r, \'"]\'));\r\n    }\r\n    function X(e) {\r\n        if (e.events.hasOwnProperty("keyboard")) return !1;\r\n        e.events.keyboard = a("keydown", {\r\n            onElement: window,\r\n            withCallback: function (t, i) {\r\n                var n = (t = t || window.event).keyCode;\r\n                if (9 == n) {\r\n                    var s = document.querySelector(".gbtn.focused");\r\n                    if (!s) {\r\n                        var l =\r\n                            !(\r\n                                !document.activeElement ||\r\n                                !document.activeElement.nodeName\r\n                            ) &&\r\n                            document.activeElement.nodeName.toLocaleLowerCase();\r\n                        if ("input" == l || "textarea" == l || "button" == l)\r\n                            return;\r\n                    }\r\n                    t.preventDefault();\r\n                    var o = document.querySelectorAll(".gbtn[data-taborder]");\r\n                    if (!o || o.length <= 0) return;\r\n                    if (!s) {\r\n                        var r = z();\r\n                        return void (r && (r.focus(), h(r, "focused")));\r\n                    }\r\n                    var a = z(s.getAttribute("data-taborder"));\r\n                    d(s, "focused"), a && (a.focus(), h(a, "focused"));\r\n                }\r\n                39 == n && e.nextSlide(),\r\n                    37 == n && e.prevSlide(),\r\n                    27 == n && e.close();\r\n            },\r\n        });\r\n    }\r\n    function Y(e) {\r\n        return Math.sqrt(e.x * e.x + e.y * e.y);\r\n    }\r\n    function q(e, t) {\r\n        var i = (function (e, t) {\r\n            var i = Y(e) * Y(t);\r\n            if (0 === i) return 0;\r\n            var n =\r\n                (function (e, t) {\r\n                    return e.x * t.x + e.y * t.y;\r\n                })(e, t) / i;\r\n            return n > 1 && (n = 1), Math.acos(n);\r\n        })(e, t);\r\n        return (\r\n            (function (e, t) {\r\n                return e.x * t.y - t.x * e.y;\r\n            })(e, t) > 0 && (i *= -1),\r\n            (180 * i) / Math.PI\r\n        );\r\n    }\r\n    var N = (function () {\r\n        function e(i) {\r\n            t(this, e), (this.handlers = []), (this.el = i);\r\n        }\r\n        return (\r\n            n(e, [\r\n                {\r\n                    key: "add",\r\n                    value: function (e) {\r\n                        this.handlers.push(e);\r\n                    },\r\n                },\r\n                {\r\n                    key: "del",\r\n                    value: function (e) {\r\n                        e || (this.handlers = []);\r\n                        for (var t = this.handlers.length; t >= 0; t--)\r\n                            this.handlers[t] === e &&\r\n                                this.handlers.splice(t, 1);\r\n                    },\r\n                },\r\n                {\r\n                    key: "dispatch",\r\n                    value: function () {\r\n                        for (var e = 0, t = this.handlers.length; e < t; e++) {\r\n                            var i = this.handlers[e];\r\n                            "function" == typeof i &&\r\n                                i.apply(this.el, arguments);\r\n                        }\r\n                    },\r\n                },\r\n            ]),\r\n            e\r\n        );\r\n    })();\r\n    function D(e, t) {\r\n        var i = new N(e);\r\n        return i.add(t), i;\r\n    }\r\n    var _ = (function () {\r\n        function e(i, n) {\r\n            t(this, e),\r\n                (this.element =\r\n                    "string" == typeof i ? document.querySelector(i) : i),\r\n                (this.start = this.start.bind(this)),\r\n                (this.move = this.move.bind(this)),\r\n                (this.end = this.end.bind(this)),\r\n                (this.cancel = this.cancel.bind(this)),\r\n                this.element.addEventListener("touchstart", this.start, !1),\r\n                this.element.addEventListener("touchmove", this.move, !1),\r\n                this.element.addEventListener("touchend", this.end, !1),\r\n                this.element.addEventListener("touchcancel", this.cancel, !1),\r\n                (this.preV = { x: null, y: null }),\r\n                (this.pinchStartLen = null),\r\n                (this.zoom = 1),\r\n                (this.isDoubleTap = !1);\r\n            var s = function () {};\r\n            (this.rotate = D(this.element, n.rotate || s)),\r\n                (this.touchStart = D(this.element, n.touchStart || s)),\r\n                (this.multipointStart = D(\r\n                    this.element,\r\n                    n.multipointStart || s\r\n                )),\r\n                (this.multipointEnd = D(this.element, n.multipointEnd || s)),\r\n                (this.pinch = D(this.element, n.pinch || s)),\r\n                (this.swipe = D(this.element, n.swipe || s)),\r\n                (this.tap = D(this.element, n.tap || s)),\r\n                (this.doubleTap = D(this.element, n.doubleTap || s)),\r\n                (this.longTap = D(this.element, n.longTap || s)),\r\n                (this.singleTap = D(this.element, n.singleTap || s)),\r\n                (this.pressMove = D(this.element, n.pressMove || s)),\r\n                (this.twoFingerPressMove = D(\r\n                    this.element,\r\n                    n.twoFingerPressMove || s\r\n                )),\r\n                (this.touchMove = D(this.element, n.touchMove || s)),\r\n                (this.touchEnd = D(this.element, n.touchEnd || s)),\r\n                (this.touchCancel = D(this.element, n.touchCancel || s)),\r\n                (this.translateContainer = this.element),\r\n                (this._cancelAllHandler = this.cancelAll.bind(this)),\r\n                window.addEventListener("scroll", this._cancelAllHandler),\r\n                (this.delta = null),\r\n                (this.last = null),\r\n                (this.now = null),\r\n                (this.tapTimeout = null),\r\n                (this.singleTapTimeout = null),\r\n                (this.longTapTimeout = null),\r\n                (this.swipeTimeout = null),\r\n                (this.x1 = this.x2 = this.y1 = this.y2 = null),\r\n                (this.preTapPosition = { x: null, y: null });\r\n        }\r\n        return (\r\n            n(e, [\r\n                {\r\n                    key: "start",\r\n                    value: function (e) {\r\n                        if (e.touches) {\r\n                            if (\r\n                                e.target &&\r\n                                e.target.nodeName &&\r\n                                ["a", "button", "input"].indexOf(\r\n                                    e.target.nodeName.toLowerCase()\r\n                                ) >= 0\r\n                            )\r\n                                console.log(\r\n                                    "ignore drag for this touched element",\r\n                                    e.target.nodeName.toLowerCase()\r\n                                );\r\n                            else {\r\n                                (this.now = Date.now()),\r\n                                    (this.x1 = e.touches[0].pageX),\r\n                                    (this.y1 = e.touches[0].pageY),\r\n                                    (this.delta =\r\n                                        this.now - (this.last || this.now)),\r\n                                    this.touchStart.dispatch(e, this.element),\r\n                                    null !== this.preTapPosition.x &&\r\n                                        ((this.isDoubleTap =\r\n                                            this.delta > 0 &&\r\n                                            this.delta <= 250 &&\r\n                                            Math.abs(\r\n                                                this.preTapPosition.x - this.x1\r\n                                            ) < 30 &&\r\n                                            Math.abs(\r\n                                                this.preTapPosition.y - this.y1\r\n                                            ) < 30),\r\n                                        this.isDoubleTap &&\r\n                                            clearTimeout(\r\n                                                this.singleTapTimeout\r\n                                            )),\r\n                                    (this.preTapPosition.x = this.x1),\r\n                                    (this.preTapPosition.y = this.y1),\r\n                                    (this.last = this.now);\r\n                                var t = this.preV;\r\n                                if (e.touches.length > 1) {\r\n                                    this._cancelLongTap(),\r\n                                        this._cancelSingleTap();\r\n                                    var i = {\r\n                                        x: e.touches[1].pageX - this.x1,\r\n                                        y: e.touches[1].pageY - this.y1,\r\n                                    };\r\n                                    (t.x = i.x),\r\n                                        (t.y = i.y),\r\n                                        (this.pinchStartLen = Y(t)),\r\n                                        this.multipointStart.dispatch(\r\n                                            e,\r\n                                            this.element\r\n                                        );\r\n                                }\r\n                                (this._preventTap = !1),\r\n                                    (this.longTapTimeout = setTimeout(\r\n                                        function () {\r\n                                            this.longTap.dispatch(\r\n                                                e,\r\n                                                this.element\r\n                                            ),\r\n                                                (this._preventTap = !0);\r\n                                        }.bind(this),\r\n                                        750\r\n                                    ));\r\n                            }\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    key: "move",\r\n                    value: function (e) {\r\n                        if (e.touches) {\r\n                            var t = this.preV,\r\n                                i = e.touches.length,\r\n                                n = e.touches[0].pageX,\r\n                                s = e.touches[0].pageY;\r\n                            if (((this.isDoubleTap = !1), i > 1)) {\r\n                                var l = e.touches[1].pageX,\r\n                                    o = e.touches[1].pageY,\r\n                                    r = {\r\n                                        x: e.touches[1].pageX - n,\r\n                                        y: e.touches[1].pageY - s,\r\n                                    };\r\n                                null !== t.x &&\r\n                                    (this.pinchStartLen > 0 &&\r\n                                        ((e.zoom = Y(r) / this.pinchStartLen),\r\n                                        this.pinch.dispatch(e, this.element)),\r\n                                    (e.angle = q(r, t)),\r\n                                    this.rotate.dispatch(e, this.element)),\r\n                                    (t.x = r.x),\r\n                                    (t.y = r.y),\r\n                                    null !== this.x2 && null !== this.sx2\r\n                                        ? ((e.deltaX =\r\n                                              (n - this.x2 + l - this.sx2) / 2),\r\n                                          (e.deltaY =\r\n                                              (s - this.y2 + o - this.sy2) / 2))\r\n                                        : ((e.deltaX = 0), (e.deltaY = 0)),\r\n                                    this.twoFingerPressMove.dispatch(\r\n                                        e,\r\n                                        this.element\r\n                                    ),\r\n                                    (this.sx2 = l),\r\n                                    (this.sy2 = o);\r\n                            } else {\r\n                                if (null !== this.x2) {\r\n                                    (e.deltaX = n - this.x2),\r\n                                        (e.deltaY = s - this.y2);\r\n                                    var a = Math.abs(this.x1 - this.x2),\r\n                                        h = Math.abs(this.y1 - this.y2);\r\n                                    (a > 10 || h > 10) &&\r\n                                        (this._preventTap = !0);\r\n                                } else (e.deltaX = 0), (e.deltaY = 0);\r\n                                this.pressMove.dispatch(e, this.element);\r\n                            }\r\n                            this.touchMove.dispatch(e, this.element),\r\n                                this._cancelLongTap(),\r\n                                (this.x2 = n),\r\n                                (this.y2 = s),\r\n                                i > 1 && e.preventDefault();\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    key: "end",\r\n                    value: function (e) {\r\n                        if (e.changedTouches) {\r\n                            this._cancelLongTap();\r\n                            var t = this;\r\n                            e.touches.length < 2 &&\r\n                                (this.multipointEnd.dispatch(e, this.element),\r\n                                (this.sx2 = this.sy2 = null)),\r\n                                (this.x2 && Math.abs(this.x1 - this.x2) > 30) ||\r\n                                (this.y2 && Math.abs(this.y1 - this.y2) > 30)\r\n                                    ? ((e.direction = this._swipeDirection(\r\n                                          this.x1,\r\n                                          this.x2,\r\n                                          this.y1,\r\n                                          this.y2\r\n                                      )),\r\n                                      (this.swipeTimeout = setTimeout(\r\n                                          function () {\r\n                                              t.swipe.dispatch(e, t.element);\r\n                                          },\r\n                                          0\r\n                                      )))\r\n                                    : ((this.tapTimeout = setTimeout(\r\n                                          function () {\r\n                                              t._preventTap ||\r\n                                                  t.tap.dispatch(e, t.element),\r\n                                                  t.isDoubleTap &&\r\n                                                      (t.doubleTap.dispatch(\r\n                                                          e,\r\n                                                          t.element\r\n                                                      ),\r\n                                                      (t.isDoubleTap = !1));\r\n                                          },\r\n                                          0\r\n                                      )),\r\n                                      t.isDoubleTap ||\r\n                                          (t.singleTapTimeout = setTimeout(\r\n                                              function () {\r\n                                                  t.singleTap.dispatch(\r\n                                                      e,\r\n                                                      t.element\r\n                                                  );\r\n                                              },\r\n                                              250\r\n                                          ))),\r\n                                this.touchEnd.dispatch(e, this.element),\r\n                                (this.preV.x = 0),\r\n                                (this.preV.y = 0),\r\n                                (this.zoom = 1),\r\n                                (this.pinchStartLen = null),\r\n                                (this.x1 = this.x2 = this.y1 = this.y2 = null);\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    key: "cancelAll",\r\n                    value: function () {\r\n                        (this._preventTap = !0),\r\n                            clearTimeout(this.singleTapTimeout),\r\n                            clearTimeout(this.tapTimeout),\r\n                            clearTimeout(this.longTapTimeout),\r\n                            clearTimeout(this.swipeTimeout);\r\n                    },\r\n                },\r\n                {\r\n                    key: "cancel",\r\n                    value: function (e) {\r\n                        this.cancelAll(),\r\n                            this.touchCancel.dispatch(e, this.element);\r\n                    },\r\n                },\r\n                {\r\n                    key: "_cancelLongTap",\r\n                    value: function () {\r\n                        clearTimeout(this.longTapTimeout);\r\n                    },\r\n                },\r\n                {\r\n                    key: "_cancelSingleTap",\r\n                    value: function () {\r\n                        clearTimeout(this.singleTapTimeout);\r\n                    },\r\n                },\r\n                {\r\n                    key: "_swipeDirection",\r\n                    value: function (e, t, i, n) {\r\n                        return Math.abs(e - t) >= Math.abs(i - n)\r\n                            ? e - t > 0\r\n                                ? "Left"\r\n                                : "Right"\r\n                            : i - n > 0\r\n                            ? "Up"\r\n                            : "Down";\r\n                    },\r\n                },\r\n                {\r\n                    key: "on",\r\n                    value: function (e, t) {\r\n                        this[e] && this[e].add(t);\r\n                    },\r\n                },\r\n                {\r\n                    key: "off",\r\n                    value: function (e, t) {\r\n                        this[e] && this[e].del(t);\r\n                    },\r\n                },\r\n                {\r\n                    key: "destroy",\r\n                    value: function () {\r\n                        return (\r\n                            this.singleTapTimeout &&\r\n                                clearTimeout(this.singleTapTimeout),\r\n                            this.tapTimeout && clearTimeout(this.tapTimeout),\r\n                            this.longTapTimeout &&\r\n                                clearTimeout(this.longTapTimeout),\r\n                            this.swipeTimeout &&\r\n                                clearTimeout(this.swipeTimeout),\r\n                            this.element.removeEventListener(\r\n                                "touchstart",\r\n                                this.start\r\n                            ),\r\n                            this.element.removeEventListener(\r\n                                "touchmove",\r\n                                this.move\r\n                            ),\r\n                            this.element.removeEventListener(\r\n                                "touchend",\r\n                                this.end\r\n                            ),\r\n                            this.element.removeEventListener(\r\n                                "touchcancel",\r\n                                this.cancel\r\n                            ),\r\n                            this.rotate.del(),\r\n                            this.touchStart.del(),\r\n                            this.multipointStart.del(),\r\n                            this.multipointEnd.del(),\r\n                            this.pinch.del(),\r\n                            this.swipe.del(),\r\n                            this.tap.del(),\r\n                            this.doubleTap.del(),\r\n                            this.longTap.del(),\r\n                            this.singleTap.del(),\r\n                            this.pressMove.del(),\r\n                            this.twoFingerPressMove.del(),\r\n                            this.touchMove.del(),\r\n                            this.touchEnd.del(),\r\n                            this.touchCancel.del(),\r\n                            (this.preV =\r\n                                this.pinchStartLen =\r\n                                this.zoom =\r\n                                this.isDoubleTap =\r\n                                this.delta =\r\n                                this.last =\r\n                                this.now =\r\n                                this.tapTimeout =\r\n                                this.singleTapTimeout =\r\n                                this.longTapTimeout =\r\n                                this.swipeTimeout =\r\n                                this.x1 =\r\n                                this.x2 =\r\n                                this.y1 =\r\n                                this.y2 =\r\n                                this.preTapPosition =\r\n                                this.rotate =\r\n                                this.touchStart =\r\n                                this.multipointStart =\r\n                                this.multipointEnd =\r\n                                this.pinch =\r\n                                this.swipe =\r\n                                this.tap =\r\n                                this.doubleTap =\r\n                                this.longTap =\r\n                                this.singleTap =\r\n                                this.pressMove =\r\n                                this.touchMove =\r\n                                this.touchEnd =\r\n                                this.touchCancel =\r\n                                this.twoFingerPressMove =\r\n                                    null),\r\n                            window.removeEventListener(\r\n                                "scroll",\r\n                                this._cancelAllHandler\r\n                            ),\r\n                            null\r\n                        );\r\n                    },\r\n                },\r\n            ]),\r\n            e\r\n        );\r\n    })();\r\n    function W(e) {\r\n        var t = (function () {\r\n                var e,\r\n                    t = document.createElement("fakeelement"),\r\n                    i = {\r\n                        transition: "transitionend",\r\n                        OTransition: "oTransitionEnd",\r\n                        MozTransition: "transitionend",\r\n                        WebkitTransition: "webkitTransitionEnd",\r\n                    };\r\n                for (e in i) if (void 0 !== t.style[e]) return i[e];\r\n            })(),\r\n            i =\r\n                window.innerWidth ||\r\n                document.documentElement.clientWidth ||\r\n                document.body.clientWidth,\r\n            n = c(e, "gslide-media") ? e : e.querySelector(".gslide-media"),\r\n            s = u(n, ".ginner-container"),\r\n            l = e.querySelector(".gslide-description");\r\n        i > 769 && (n = s),\r\n            h(n, "greset"),\r\n            v(n, "translate3d(0, 0, 0)"),\r\n            a(t, {\r\n                onElement: n,\r\n                once: !0,\r\n                withCallback: function (e, t) {\r\n                    d(n, "greset");\r\n                },\r\n            }),\r\n            (n.style.opacity = ""),\r\n            l && (l.style.opacity = "");\r\n    }\r\n    function B(e) {\r\n        if (e.events.hasOwnProperty("touch")) return !1;\r\n        var t,\r\n            i,\r\n            n,\r\n            s = y(),\r\n            l = s.width,\r\n            o = s.height,\r\n            r = !1,\r\n            a = null,\r\n            g = null,\r\n            f = null,\r\n            p = !1,\r\n            m = 1,\r\n            x = 1,\r\n            b = !1,\r\n            S = !1,\r\n            w = null,\r\n            T = null,\r\n            C = null,\r\n            k = null,\r\n            E = 0,\r\n            A = 0,\r\n            L = !1,\r\n            I = !1,\r\n            O = {},\r\n            P = {},\r\n            M = 0,\r\n            z = 0,\r\n            X = document.getElementById("glightbox-slider"),\r\n            Y = document.querySelector(".goverlay"),\r\n            q = new _(X, {\r\n                touchStart: function (t) {\r\n                    if (\r\n                        ((r = !0),\r\n                        (c(t.targetTouches[0].target, "ginner-container") ||\r\n                            u(t.targetTouches[0].target, ".gslide-desc") ||\r\n                            "a" ==\r\n                                t.targetTouches[0].target.nodeName.toLowerCase()) &&\r\n                            (r = !1),\r\n                        u(t.targetTouches[0].target, ".gslide-inline") &&\r\n                            !c(\r\n                                t.targetTouches[0].target.parentNode,\r\n                                "gslide-inline"\r\n                            ) &&\r\n                            (r = !1),\r\n                        r)\r\n                    ) {\r\n                        if (\r\n                            ((P = t.targetTouches[0]),\r\n                            (O.pageX = t.targetTouches[0].pageX),\r\n                            (O.pageY = t.targetTouches[0].pageY),\r\n                            (M = t.targetTouches[0].clientX),\r\n                            (z = t.targetTouches[0].clientY),\r\n                            (a = e.activeSlide),\r\n                            (g = a.querySelector(".gslide-media")),\r\n                            (n = a.querySelector(".gslide-inline")),\r\n                            (f = null),\r\n                            c(g, "gslide-image") &&\r\n                                (f = g.querySelector("img")),\r\n                            (window.innerWidth ||\r\n                                document.documentElement.clientWidth ||\r\n                                document.body.clientWidth) > 769 &&\r\n                                (g = a.querySelector(".ginner-container")),\r\n                            d(Y, "greset"),\r\n                            t.pageX > 20 && t.pageX < window.innerWidth - 20)\r\n                        )\r\n                            return;\r\n                        t.preventDefault();\r\n                    }\r\n                },\r\n                touchMove: function (s) {\r\n                    if (r && ((P = s.targetTouches[0]), !b && !S)) {\r\n                        if (n && n.offsetHeight > o) {\r\n                            var a = O.pageX - P.pageX;\r\n                            if (Math.abs(a) <= 13) return !1;\r\n                        }\r\n                        p = !0;\r\n                        var h,\r\n                            d = s.targetTouches[0].clientX,\r\n                            c = s.targetTouches[0].clientY,\r\n                            u = M - d,\r\n                            m = z - c;\r\n                        if (\r\n                            (Math.abs(u) > Math.abs(m)\r\n                                ? ((L = !1), (I = !0))\r\n                                : ((I = !1), (L = !0)),\r\n                            (t = P.pageX - O.pageX),\r\n                            (E = (100 * t) / l),\r\n                            (i = P.pageY - O.pageY),\r\n                            (A = (100 * i) / o),\r\n                            L &&\r\n                                f &&\r\n                                ((h = 1 - Math.abs(i) / o),\r\n                                (Y.style.opacity = h),\r\n                                e.settings.touchFollowAxis && (E = 0)),\r\n                            I &&\r\n                                ((h = 1 - Math.abs(t) / l),\r\n                                (g.style.opacity = h),\r\n                                e.settings.touchFollowAxis && (A = 0)),\r\n                            !f)\r\n                        )\r\n                            return v(g, "translate3d(".concat(E, "%, 0, 0)"));\r\n                        v(\r\n                            g,\r\n                            "translate3d(".concat(E, "%, ").concat(A, "%, 0)")\r\n                        );\r\n                    }\r\n                },\r\n                touchEnd: function () {\r\n                    if (r) {\r\n                        if (((p = !1), S || b)) return (C = w), void (k = T);\r\n                        var t = Math.abs(parseInt(A)),\r\n                            i = Math.abs(parseInt(E));\r\n                        if (!(t > 29 && f))\r\n                            return t < 29 && i < 25\r\n                                ? (h(Y, "greset"), (Y.style.opacity = 1), W(g))\r\n                                : void 0;\r\n                        e.close();\r\n                    }\r\n                },\r\n                multipointEnd: function () {\r\n                    setTimeout(function () {\r\n                        b = !1;\r\n                    }, 50);\r\n                },\r\n                multipointStart: function () {\r\n                    (b = !0), (m = x || 1);\r\n                },\r\n                pinch: function (e) {\r\n                    if (!f || p) return !1;\r\n                    (b = !0), (f.scaleX = f.scaleY = m * e.zoom);\r\n                    var t = m * e.zoom;\r\n                    if (((S = !0), t <= 1))\r\n                        return (\r\n                            (S = !1),\r\n                            (t = 1),\r\n                            (k = null),\r\n                            (C = null),\r\n                            (w = null),\r\n                            (T = null),\r\n                            void f.setAttribute("style", "")\r\n                        );\r\n                    t > 4.5 && (t = 4.5),\r\n                        (f.style.transform = "scale3d("\r\n                            .concat(t, ", ")\r\n                            .concat(t, ", 1)")),\r\n                        (x = t);\r\n                },\r\n                pressMove: function (e) {\r\n                    if (S && !b) {\r\n                        var t = P.pageX - O.pageX,\r\n                            i = P.pageY - O.pageY;\r\n                        C && (t += C), k && (i += k), (w = t), (T = i);\r\n                        var n = "translate3d("\r\n                            .concat(t, "px, ")\r\n                            .concat(i, "px, 0)");\r\n                        x &&\r\n                            (n += " scale3d("\r\n                                .concat(x, ", ")\r\n                                .concat(x, ", 1)")),\r\n                            v(f, n);\r\n                    }\r\n                },\r\n                swipe: function (t) {\r\n                    if (!S)\r\n                        if (b) b = !1;\r\n                        else {\r\n                            if ("Left" == t.direction) {\r\n                                if (e.index == e.elements.length - 1)\r\n                                    return W(g);\r\n                                e.nextSlide();\r\n                            }\r\n                            if ("Right" == t.direction) {\r\n                                if (0 == e.index) return W(g);\r\n                                e.prevSlide();\r\n                            }\r\n                        }\r\n                },\r\n            });\r\n        e.events.touch = q;\r\n    }\r\n    var H = (function () {\r\n            function e(i, n) {\r\n                var s = this,\r\n                    l =\r\n                        arguments.length > 2 && void 0 !== arguments[2]\r\n                            ? arguments[2]\r\n                            : null;\r\n                if (\r\n                    (t(this, e),\r\n                    (this.img = i),\r\n                    (this.slide = n),\r\n                    (this.onclose = l),\r\n                    this.img.setZoomEvents)\r\n                )\r\n                    return !1;\r\n                (this.active = !1),\r\n                    (this.zoomedIn = !1),\r\n                    (this.dragging = !1),\r\n                    (this.currentX = null),\r\n                    (this.currentY = null),\r\n                    (this.initialX = null),\r\n                    (this.initialY = null),\r\n                    (this.xOffset = 0),\r\n                    (this.yOffset = 0),\r\n                    this.img.addEventListener(\r\n                        "mousedown",\r\n                        function (e) {\r\n                            return s.dragStart(e);\r\n                        },\r\n                        !1\r\n                    ),\r\n                    this.img.addEventListener(\r\n                        "mouseup",\r\n                        function (e) {\r\n                            return s.dragEnd(e);\r\n                        },\r\n                        !1\r\n                    ),\r\n                    this.img.addEventListener(\r\n                        "mousemove",\r\n                        function (e) {\r\n                            return s.drag(e);\r\n                        },\r\n                        !1\r\n                    ),\r\n                    this.img.addEventListener(\r\n                        "click",\r\n                        function (e) {\r\n                            return s.slide.classList.contains("dragging-nav")\r\n                                ? (s.zoomOut(), !1)\r\n                                : s.zoomedIn\r\n                                ? void (\r\n                                      s.zoomedIn &&\r\n                                      !s.dragging &&\r\n                                      s.zoomOut()\r\n                                  )\r\n                                : s.zoomIn();\r\n                        },\r\n                        !1\r\n                    ),\r\n                    (this.img.setZoomEvents = !0);\r\n            }\r\n            return (\r\n                n(e, [\r\n                    {\r\n                        key: "zoomIn",\r\n                        value: function () {\r\n                            var e = this.widowWidth();\r\n                            if (!(this.zoomedIn || e <= 768)) {\r\n                                var t = this.img;\r\n                                if (\r\n                                    (t.setAttribute(\r\n                                        "data-style",\r\n                                        t.getAttribute("style")\r\n                                    ),\r\n                                    (t.style.maxWidth = t.naturalWidth + "px"),\r\n                                    (t.style.maxHeight =\r\n                                        t.naturalHeight + "px"),\r\n                                    t.naturalWidth > e)\r\n                                ) {\r\n                                    var i = e / 2 - t.naturalWidth / 2;\r\n                                    this.setTranslate(\r\n                                        this.img.parentNode,\r\n                                        i,\r\n                                        0\r\n                                    );\r\n                                }\r\n                                this.slide.classList.add("zoomed"),\r\n                                    (this.zoomedIn = !0);\r\n                            }\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "zoomOut",\r\n                        value: function () {\r\n                            this.img.parentNode.setAttribute("style", ""),\r\n                                this.img.setAttribute(\r\n                                    "style",\r\n                                    this.img.getAttribute("data-style")\r\n                                ),\r\n                                this.slide.classList.remove("zoomed"),\r\n                                (this.zoomedIn = !1),\r\n                                (this.currentX = null),\r\n                                (this.currentY = null),\r\n                                (this.initialX = null),\r\n                                (this.initialY = null),\r\n                                (this.xOffset = 0),\r\n                                (this.yOffset = 0),\r\n                                this.onclose &&\r\n                                    "function" == typeof this.onclose &&\r\n                                    this.onclose();\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "dragStart",\r\n                        value: function (e) {\r\n                            e.preventDefault(),\r\n                                this.zoomedIn\r\n                                    ? ("touchstart" === e.type\r\n                                          ? ((this.initialX =\r\n                                                e.touches[0].clientX -\r\n                                                this.xOffset),\r\n                                            (this.initialY =\r\n                                                e.touches[0].clientY -\r\n                                                this.yOffset))\r\n                                          : ((this.initialX =\r\n                                                e.clientX - this.xOffset),\r\n                                            (this.initialY =\r\n                                                e.clientY - this.yOffset)),\r\n                                      e.target === this.img &&\r\n                                          ((this.active = !0),\r\n                                          this.img.classList.add("dragging")))\r\n                                    : (this.active = !1);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "dragEnd",\r\n                        value: function (e) {\r\n                            var t = this;\r\n                            e.preventDefault(),\r\n                                (this.initialX = this.currentX),\r\n                                (this.initialY = this.currentY),\r\n                                (this.active = !1),\r\n                                setTimeout(function () {\r\n                                    (t.dragging = !1),\r\n                                        (t.img.isDragging = !1),\r\n                                        t.img.classList.remove("dragging");\r\n                                }, 100);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "drag",\r\n                        value: function (e) {\r\n                            this.active &&\r\n                                (e.preventDefault(),\r\n                                "touchmove" === e.type\r\n                                    ? ((this.currentX =\r\n                                          e.touches[0].clientX - this.initialX),\r\n                                      (this.currentY =\r\n                                          e.touches[0].clientY - this.initialY))\r\n                                    : ((this.currentX =\r\n                                          e.clientX - this.initialX),\r\n                                      (this.currentY =\r\n                                          e.clientY - this.initialY)),\r\n                                (this.xOffset = this.currentX),\r\n                                (this.yOffset = this.currentY),\r\n                                (this.img.isDragging = !0),\r\n                                (this.dragging = !0),\r\n                                this.setTranslate(\r\n                                    this.img,\r\n                                    this.currentX,\r\n                                    this.currentY\r\n                                ));\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "onMove",\r\n                        value: function (e) {\r\n                            if (this.zoomedIn) {\r\n                                var t = e.clientX - this.img.naturalWidth / 2,\r\n                                    i = e.clientY - this.img.naturalHeight / 2;\r\n                                this.setTranslate(this.img, t, i);\r\n                            }\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "setTranslate",\r\n                        value: function (e, t, i) {\r\n                            e.style.transform =\r\n                                "translate3d(" + t + "px, " + i + "px, 0)";\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "widowWidth",\r\n                        value: function () {\r\n                            return (\r\n                                window.innerWidth ||\r\n                                document.documentElement.clientWidth ||\r\n                                document.body.clientWidth\r\n                            );\r\n                        },\r\n                    },\r\n                ]),\r\n                e\r\n            );\r\n        })(),\r\n        V = (function () {\r\n            function e() {\r\n                var i = this,\r\n                    n =\r\n                        arguments.length > 0 && void 0 !== arguments[0]\r\n                            ? arguments[0]\r\n                            : {};\r\n                t(this, e);\r\n                var s = n.dragEl,\r\n                    l = n.toleranceX,\r\n                    o = void 0 === l ? 40 : l,\r\n                    r = n.toleranceY,\r\n                    a = void 0 === r ? 65 : r,\r\n                    h = n.slide,\r\n                    d = void 0 === h ? null : h,\r\n                    c = n.instance,\r\n                    u = void 0 === c ? null : c;\r\n                (this.el = s),\r\n                    (this.active = !1),\r\n                    (this.dragging = !1),\r\n                    (this.currentX = null),\r\n                    (this.currentY = null),\r\n                    (this.initialX = null),\r\n                    (this.initialY = null),\r\n                    (this.xOffset = 0),\r\n                    (this.yOffset = 0),\r\n                    (this.direction = null),\r\n                    (this.lastDirection = null),\r\n                    (this.toleranceX = o),\r\n                    (this.toleranceY = a),\r\n                    (this.toleranceReached = !1),\r\n                    (this.dragContainer = this.el),\r\n                    (this.slide = d),\r\n                    (this.instance = u),\r\n                    this.el.addEventListener(\r\n                        "mousedown",\r\n                        function (e) {\r\n                            return i.dragStart(e);\r\n                        },\r\n                        !1\r\n                    ),\r\n                    this.el.addEventListener(\r\n                        "mouseup",\r\n                        function (e) {\r\n                            return i.dragEnd(e);\r\n                        },\r\n                        !1\r\n                    ),\r\n                    this.el.addEventListener(\r\n                        "mousemove",\r\n                        function (e) {\r\n                            return i.drag(e);\r\n                        },\r\n                        !1\r\n                    );\r\n            }\r\n            return (\r\n                n(e, [\r\n                    {\r\n                        key: "dragStart",\r\n                        value: function (e) {\r\n                            if (this.slide.classList.contains("zoomed"))\r\n                                this.active = !1;\r\n                            else {\r\n                                "touchstart" === e.type\r\n                                    ? ((this.initialX =\r\n                                          e.touches[0].clientX - this.xOffset),\r\n                                      (this.initialY =\r\n                                          e.touches[0].clientY - this.yOffset))\r\n                                    : ((this.initialX =\r\n                                          e.clientX - this.xOffset),\r\n                                      (this.initialY =\r\n                                          e.clientY - this.yOffset));\r\n                                var t = e.target.nodeName.toLowerCase();\r\n                                e.target.classList.contains("nodrag") ||\r\n                                u(e.target, ".nodrag") ||\r\n                                -1 !==\r\n                                    [\r\n                                        "input",\r\n                                        "select",\r\n                                        "textarea",\r\n                                        "button",\r\n                                        "a",\r\n                                    ].indexOf(t)\r\n                                    ? (this.active = !1)\r\n                                    : (e.preventDefault(),\r\n                                      (e.target === this.el ||\r\n                                          ("img" !== t &&\r\n                                              u(e.target, ".gslide-inline"))) &&\r\n                                          ((this.active = !0),\r\n                                          this.el.classList.add("dragging"),\r\n                                          (this.dragContainer = u(\r\n                                              e.target,\r\n                                              ".ginner-container"\r\n                                          ))));\r\n                            }\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "dragEnd",\r\n                        value: function (e) {\r\n                            var t = this;\r\n                            e && e.preventDefault(),\r\n                                (this.initialX = 0),\r\n                                (this.initialY = 0),\r\n                                (this.currentX = null),\r\n                                (this.currentY = null),\r\n                                (this.initialX = null),\r\n                                (this.initialY = null),\r\n                                (this.xOffset = 0),\r\n                                (this.yOffset = 0),\r\n                                (this.active = !1),\r\n                                this.doSlideChange &&\r\n                                    ((this.instance.preventOutsideClick = !0),\r\n                                    "right" == this.doSlideChange &&\r\n                                        this.instance.prevSlide(),\r\n                                    "left" == this.doSlideChange &&\r\n                                        this.instance.nextSlide()),\r\n                                this.doSlideClose && this.instance.close(),\r\n                                this.toleranceReached ||\r\n                                    this.setTranslate(\r\n                                        this.dragContainer,\r\n                                        0,\r\n                                        0,\r\n                                        !0\r\n                                    ),\r\n                                setTimeout(function () {\r\n                                    (t.instance.preventOutsideClick = !1),\r\n                                        (t.toleranceReached = !1),\r\n                                        (t.lastDirection = null),\r\n                                        (t.dragging = !1),\r\n                                        (t.el.isDragging = !1),\r\n                                        t.el.classList.remove("dragging"),\r\n                                        t.slide.classList.remove(\r\n                                            "dragging-nav"\r\n                                        ),\r\n                                        (t.dragContainer.style.transform = ""),\r\n                                        (t.dragContainer.style.transition = "");\r\n                                }, 100);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "drag",\r\n                        value: function (e) {\r\n                            if (this.active) {\r\n                                e.preventDefault(),\r\n                                    this.slide.classList.add("dragging-nav"),\r\n                                    "touchmove" === e.type\r\n                                        ? ((this.currentX =\r\n                                              e.touches[0].clientX -\r\n                                              this.initialX),\r\n                                          (this.currentY =\r\n                                              e.touches[0].clientY -\r\n                                              this.initialY))\r\n                                        : ((this.currentX =\r\n                                              e.clientX - this.initialX),\r\n                                          (this.currentY =\r\n                                              e.clientY - this.initialY)),\r\n                                    (this.xOffset = this.currentX),\r\n                                    (this.yOffset = this.currentY),\r\n                                    (this.el.isDragging = !0),\r\n                                    (this.dragging = !0),\r\n                                    (this.doSlideChange = !1),\r\n                                    (this.doSlideClose = !1);\r\n                                var t = Math.abs(this.currentX),\r\n                                    i = Math.abs(this.currentY);\r\n                                if (\r\n                                    t > 0 &&\r\n                                    t >= Math.abs(this.currentY) &&\r\n                                    (!this.lastDirection ||\r\n                                        "x" == this.lastDirection)\r\n                                ) {\r\n                                    (this.yOffset = 0),\r\n                                        (this.lastDirection = "x"),\r\n                                        this.setTranslate(\r\n                                            this.dragContainer,\r\n                                            this.currentX,\r\n                                            0\r\n                                        );\r\n                                    var n = this.shouldChange();\r\n                                    if (\r\n                                        (!this.instance.settings.dragAutoSnap &&\r\n                                            n &&\r\n                                            (this.doSlideChange = n),\r\n                                        this.instance.settings.dragAutoSnap &&\r\n                                            n)\r\n                                    )\r\n                                        return (\r\n                                            (this.instance.preventOutsideClick =\r\n                                                !0),\r\n                                            (this.toleranceReached = !0),\r\n                                            (this.active = !1),\r\n                                            (this.instance.preventOutsideClick =\r\n                                                !0),\r\n                                            this.dragEnd(null),\r\n                                            "right" == n &&\r\n                                                this.instance.prevSlide(),\r\n                                            void (\r\n                                                "left" == n &&\r\n                                                this.instance.nextSlide()\r\n                                            )\r\n                                        );\r\n                                }\r\n                                if (\r\n                                    this.toleranceY > 0 &&\r\n                                    i > 0 &&\r\n                                    i >= t &&\r\n                                    (!this.lastDirection ||\r\n                                        "y" == this.lastDirection)\r\n                                ) {\r\n                                    (this.xOffset = 0),\r\n                                        (this.lastDirection = "y"),\r\n                                        this.setTranslate(\r\n                                            this.dragContainer,\r\n                                            0,\r\n                                            this.currentY\r\n                                        );\r\n                                    var s = this.shouldClose();\r\n                                    return (\r\n                                        !this.instance.settings.dragAutoSnap &&\r\n                                            s &&\r\n                                            (this.doSlideClose = !0),\r\n                                        void (\r\n                                            this.instance.settings\r\n                                                .dragAutoSnap &&\r\n                                            s &&\r\n                                            this.instance.close()\r\n                                        )\r\n                                    );\r\n                                }\r\n                            }\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "shouldChange",\r\n                        value: function () {\r\n                            var e = !1;\r\n                            if (Math.abs(this.currentX) >= this.toleranceX) {\r\n                                var t = this.currentX > 0 ? "right" : "left";\r\n                                (("left" == t &&\r\n                                    this.slide !==\r\n                                        this.slide.parentNode.lastChild) ||\r\n                                    ("right" == t &&\r\n                                        this.slide !==\r\n                                            this.slide.parentNode\r\n                                                .firstChild)) &&\r\n                                    (e = t);\r\n                            }\r\n                            return e;\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "shouldClose",\r\n                        value: function () {\r\n                            var e = !1;\r\n                            return (\r\n                                Math.abs(this.currentY) >= this.toleranceY &&\r\n                                    (e = !0),\r\n                                e\r\n                            );\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "setTranslate",\r\n                        value: function (e, t, i) {\r\n                            var n =\r\n                                arguments.length > 3 &&\r\n                                void 0 !== arguments[3] &&\r\n                                arguments[3];\r\n                            (e.style.transition = n ? "all .2s ease" : ""),\r\n                                (e.style.transform = "translate3d("\r\n                                    .concat(t, "px, ")\r\n                                    .concat(i, "px, 0)"));\r\n                        },\r\n                    },\r\n                ]),\r\n                e\r\n            );\r\n        })();\r\n    function j(e, t, i, n) {\r\n        var s = e.querySelector(".gslide-media"),\r\n            l = new Image(),\r\n            o = "gSlideTitle_" + i,\r\n            r = "gSlideDesc_" + i;\r\n        l.addEventListener(\r\n            "load",\r\n            function () {\r\n                T(n) && n();\r\n            },\r\n            !1\r\n        ),\r\n            (l.src = t.href),\r\n            "" != t.sizes &&\r\n                "" != t.srcset &&\r\n                ((l.sizes = t.sizes), (l.srcset = t.srcset)),\r\n            (l.alt = ""),\r\n            I(t.alt) || "" === t.alt || (l.alt = t.alt),\r\n            "" !== t.title && l.setAttribute("aria-labelledby", o),\r\n            "" !== t.description && l.setAttribute("aria-describedby", r),\r\n            t.hasOwnProperty("_hasCustomWidth") &&\r\n                t._hasCustomWidth &&\r\n                (l.style.width = t.width),\r\n            t.hasOwnProperty("_hasCustomHeight") &&\r\n                t._hasCustomHeight &&\r\n                (l.style.height = t.height),\r\n            s.insertBefore(l, s.firstChild);\r\n    }\r\n    function F(e, t, i, n) {\r\n        var s = this,\r\n            l = e.querySelector(".ginner-container"),\r\n            o = "gvideo" + i,\r\n            r = e.querySelector(".gslide-media"),\r\n            a = this.getAllPlayers();\r\n        h(l, "gvideo-container"),\r\n            r.insertBefore(\r\n                m(\'<div class="gvideo-wrapper"></div>\'),\r\n                r.firstChild\r\n            );\r\n        var d = e.querySelector(".gvideo-wrapper");\r\n        S(this.settings.plyr.css, "Plyr");\r\n        var c = t.href,\r\n            u = location.protocol.replace(":", ""),\r\n            g = "",\r\n            v = "",\r\n            f = !1;\r\n        "file" == u && (u = "http"),\r\n            (r.style.maxWidth = t.width),\r\n            S(this.settings.plyr.js, "Plyr", function () {\r\n                if (c.match(/vimeo\\.com\\/([0-9]*)/)) {\r\n                    var l = /vimeo.*\\/(\\d+)/i.exec(c);\r\n                    (g = "vimeo"), (v = l[1]);\r\n                }\r\n                if (\r\n                    c.match(\r\n                        /(youtube\\.com|youtube-nocookie\\.com)\\/watch\\?v=([a-zA-Z0-9\\-_]+)/\r\n                    ) ||\r\n                    c.match(/youtu\\.be\\/([a-zA-Z0-9\\-_]+)/) ||\r\n                    c.match(\r\n                        /(youtube\\.com|youtube-nocookie\\.com)\\/embed\\/([a-zA-Z0-9\\-_]+)/\r\n                    )\r\n                ) {\r\n                    var r = (function (e) {\r\n                        var t = "";\r\n                        t =\r\n                            void 0 !==\r\n                            (e = e\r\n                                .replace(/(>|<)/gi, "")\r\n                                .split(\r\n                                    /(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/\r\n                                ))[2]\r\n                                ? (t = e[2].split(/[^0-9a-z_\\-]/i))[0]\r\n                                : e;\r\n                        return t;\r\n                    })(c);\r\n                    (g = "youtube"), (v = r);\r\n                }\r\n                if (null !== c.match(/\\.(mp4|ogg|webm|mov)$/)) {\r\n                    g = "local";\r\n                    var u = \'<video id="\' + o + \'" \';\r\n                    (u += \'style="background:#000; max-width: \'.concat(\r\n                        t.width,\r\n                        \';" \'\r\n                    )),\r\n                        (u += \'preload="metadata" \'),\r\n                        (u += \'x-webkit-airplay="allow" \'),\r\n                        (u += "playsinline "),\r\n                        (u += "controls "),\r\n                        (u += \'class="gvideo-local">\');\r\n                    var p = c.toLowerCase().split(".").pop(),\r\n                        y = { mp4: "", ogg: "", webm: "" };\r\n                    for (var x in ((y[(p = "mov" == p ? "mp4" : p)] = c), y))\r\n                        if (y.hasOwnProperty(x)) {\r\n                            var S = y[x];\r\n                            t.hasOwnProperty(x) && (S = t[x]),\r\n                                "" !== S &&\r\n                                    (u += \'<source src="\'\r\n                                        .concat(S, \'" type="video/\')\r\n                                        .concat(x, \'">\'));\r\n                        }\r\n                    f = m((u += "</video>"));\r\n                }\r\n                var w =\r\n                    f ||\r\n                    m(\r\n                        \'<div id="\'\r\n                            .concat(o, \'" data-plyr-provider="\')\r\n                            .concat(g, \'" data-plyr-embed-id="\')\r\n                            .concat(v, \'"></div>\')\r\n                    );\r\n                h(d, "".concat(g, "-video gvideo")),\r\n                    d.appendChild(w),\r\n                    d.setAttribute("data-id", o),\r\n                    d.setAttribute("data-index", i);\r\n                var C = O(s.settings.plyr, "config")\r\n                        ? s.settings.plyr.config\r\n                        : {},\r\n                    k = new Plyr("#" + o, C);\r\n                k.on("ready", function (e) {\r\n                    var t = e.detail.plyr;\r\n                    (a[o] = t), T(n) && n();\r\n                }),\r\n                    b(\r\n                        function () {\r\n                            return (\r\n                                e.querySelector("iframe") &&\r\n                                "true" ==\r\n                                    e.querySelector("iframe").dataset.ready\r\n                            );\r\n                        },\r\n                        function () {\r\n                            s.resize(e);\r\n                        }\r\n                    ),\r\n                    k.on("enterfullscreen", R),\r\n                    k.on("exitfullscreen", R);\r\n            });\r\n    }\r\n    function R(e) {\r\n        var t = u(e.target, ".gslide-media");\r\n        "enterfullscreen" == e.type && h(t, "fullscreen"),\r\n            "exitfullscreen" == e.type && d(t, "fullscreen");\r\n    }\r\n    function G(e, t, i, n) {\r\n        var s,\r\n            l = this,\r\n            o = e.querySelector(".gslide-media"),\r\n            r = !(!O(t, "href") || !t.href) && t.href.split("#").pop().trim(),\r\n            d = !(!O(t, "content") || !t.content) && t.content;\r\n        if (\r\n            d &&\r\n            (C(d) &&\r\n                (s = m(\'<div class="ginlined-content">\'.concat(d, "</div>"))),\r\n            k(d))\r\n        ) {\r\n            "none" == d.style.display && (d.style.display = "block");\r\n            var c = document.createElement("div");\r\n            (c.className = "ginlined-content"), c.appendChild(d), (s = c);\r\n        }\r\n        if (r) {\r\n            var u = document.getElementById(r);\r\n            if (!u) return !1;\r\n            var g = u.cloneNode(!0);\r\n            (g.style.height = t.height),\r\n                (g.style.maxWidth = t.width),\r\n                h(g, "ginlined-content"),\r\n                (s = g);\r\n        }\r\n        if (!s)\r\n            return (\r\n                console.error("Unable to append inline slide content", t), !1\r\n            );\r\n        (o.style.height = t.height),\r\n            (o.style.width = t.width),\r\n            o.appendChild(s),\r\n            (this.events["inlineclose" + r] = a("click", {\r\n                onElement: o.querySelectorAll(".gtrigger-close"),\r\n                withCallback: function (e) {\r\n                    e.preventDefault(), l.close();\r\n                },\r\n            })),\r\n            T(n) && n();\r\n    }\r\n    function Z(e, t, i, n) {\r\n        var s = e.querySelector(".gslide-media"),\r\n            l = (function (e) {\r\n                var t = e.url,\r\n                    i = e.allow,\r\n                    n = e.callback,\r\n                    s = e.appendTo,\r\n                    l = document.createElement("iframe");\r\n                return (\r\n                    (l.className = "vimeo-video gvideo"),\r\n                    (l.src = t),\r\n                    (l.style.width = "100%"),\r\n                    (l.style.height = "100%"),\r\n                    i && l.setAttribute("allow", i),\r\n                    (l.onload = function () {\r\n                        h(l, "node-ready"), T(n) && n();\r\n                    }),\r\n                    s && s.appendChild(l),\r\n                    l\r\n                );\r\n            })({ url: t.href, callback: n });\r\n        (s.parentNode.style.maxWidth = t.width),\r\n            (s.parentNode.style.height = t.height),\r\n            s.appendChild(l);\r\n    }\r\n    var $ = (function () {\r\n            function e() {\r\n                var i =\r\n                    arguments.length > 0 && void 0 !== arguments[0]\r\n                        ? arguments[0]\r\n                        : {};\r\n                t(this, e),\r\n                    (this.defaults = {\r\n                        href: "",\r\n                        sizes: "",\r\n                        srcset: "",\r\n                        title: "",\r\n                        type: "",\r\n                        description: "",\r\n                        alt: "",\r\n                        descPosition: "bottom",\r\n                        effect: "",\r\n                        width: "",\r\n                        height: "",\r\n                        content: !1,\r\n                        zoomable: !0,\r\n                        draggable: !0,\r\n                    }),\r\n                    L(i) && (this.defaults = l(this.defaults, i));\r\n            }\r\n            return (\r\n                n(e, [\r\n                    {\r\n                        key: "sourceType",\r\n                        value: function (e) {\r\n                            var t = e;\r\n                            if (\r\n                                null !==\r\n                                (e = e.toLowerCase()).match(\r\n                                    /\\.(jpeg|jpg|jpe|gif|png|apn|webp|avif|svg)/\r\n                                )\r\n                            )\r\n                                return "image";\r\n                            if (\r\n                                e.match(\r\n                                    /(youtube\\.com|youtube-nocookie\\.com)\\/watch\\?v=([a-zA-Z0-9\\-_]+)/\r\n                                ) ||\r\n                                e.match(/youtu\\.be\\/([a-zA-Z0-9\\-_]+)/) ||\r\n                                e.match(\r\n                                    /(youtube\\.com|youtube-nocookie\\.com)\\/embed\\/([a-zA-Z0-9\\-_]+)/\r\n                                )\r\n                            )\r\n                                return "video";\r\n                            if (e.match(/vimeo\\.com\\/([0-9]*)/)) return "video";\r\n                            if (null !== e.match(/\\.(mp4|ogg|webm|mov)/))\r\n                                return "video";\r\n                            if (null !== e.match(/\\.(mp3|wav|wma|aac|ogg)/))\r\n                                return "audio";\r\n                            if (\r\n                                e.indexOf("#") > -1 &&\r\n                                "" !== t.split("#").pop().trim()\r\n                            )\r\n                                return "inline";\r\n                            return e.indexOf("goajax=true") > -1\r\n                                ? "ajax"\r\n                                : "external";\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "parseConfig",\r\n                        value: function (e, t) {\r\n                            var i = this,\r\n                                n = l(\r\n                                    { descPosition: t.descPosition },\r\n                                    this.defaults\r\n                                );\r\n                            if (L(e) && !k(e)) {\r\n                                O(e, "type") ||\r\n                                    (O(e, "content") && e.content\r\n                                        ? (e.type = "inline")\r\n                                        : O(e, "href") &&\r\n                                          (e.type = this.sourceType(e.href)));\r\n                                var s = l(n, e);\r\n                                return this.setSize(s, t), s;\r\n                            }\r\n                            var r = "",\r\n                                a = e.getAttribute("data-glightbox"),\r\n                                h = e.nodeName.toLowerCase();\r\n                            if (\r\n                                ("a" === h && (r = e.href),\r\n                                "img" === h && ((r = e.src), (n.alt = e.alt)),\r\n                                (n.href = r),\r\n                                o(n, function (s, l) {\r\n                                    O(t, l) && "width" !== l && (n[l] = t[l]);\r\n                                    var o = e.dataset[l];\r\n                                    I(o) || (n[l] = i.sanitizeValue(o));\r\n                                }),\r\n                                n.content && (n.type = "inline"),\r\n                                !n.type && r && (n.type = this.sourceType(r)),\r\n                                I(a))\r\n                            ) {\r\n                                if (!n.title && "a" == h) {\r\n                                    var d = e.title;\r\n                                    I(d) || "" === d || (n.title = d);\r\n                                }\r\n                                if (!n.title && "img" == h) {\r\n                                    var c = e.alt;\r\n                                    I(c) || "" === c || (n.title = c);\r\n                                }\r\n                            } else {\r\n                                var u = [];\r\n                                o(n, function (e, t) {\r\n                                    u.push(";\\\\s?" + t);\r\n                                }),\r\n                                    (u = u.join("\\\\s?:|")),\r\n                                    "" !== a.trim() &&\r\n                                        o(n, function (e, t) {\r\n                                            var s = a,\r\n                                                l = new RegExp(\r\n                                                    "s?" +\r\n                                                        t +\r\n                                                        "s?:s?(.*?)(" +\r\n                                                        u +\r\n                                                        "s?:|$)"\r\n                                                ),\r\n                                                o = s.match(l);\r\n                                            if (o && o.length && o[1]) {\r\n                                                var r = o[1]\r\n                                                    .trim()\r\n                                                    .replace(/;\\s*$/, "");\r\n                                                n[t] = i.sanitizeValue(r);\r\n                                            }\r\n                                        });\r\n                            }\r\n                            if (\r\n                                n.description &&\r\n                                "." === n.description.substring(0, 1)\r\n                            ) {\r\n                                var g;\r\n                                try {\r\n                                    g = document.querySelector(\r\n                                        n.description\r\n                                    ).innerHTML;\r\n                                } catch (e) {\r\n                                    if (!(e instanceof DOMException)) throw e;\r\n                                }\r\n                                g && (n.description = g);\r\n                            }\r\n                            if (!n.description) {\r\n                                var v = e.querySelector(".glightbox-desc");\r\n                                v && (n.description = v.innerHTML);\r\n                            }\r\n                            return (\r\n                                this.setSize(n, t, e), (this.slideConfig = n), n\r\n                            );\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "setSize",\r\n                        value: function (e, t) {\r\n                            var i =\r\n                                    arguments.length > 2 &&\r\n                                    void 0 !== arguments[2]\r\n                                        ? arguments[2]\r\n                                        : null,\r\n                                n =\r\n                                    "video" == e.type\r\n                                        ? this.checkSize(t.videosWidth)\r\n                                        : this.checkSize(t.width),\r\n                                s = this.checkSize(t.height);\r\n                            return (\r\n                                (e.width =\r\n                                    O(e, "width") && "" !== e.width\r\n                                        ? this.checkSize(e.width)\r\n                                        : n),\r\n                                (e.height =\r\n                                    O(e, "height") && "" !== e.height\r\n                                        ? this.checkSize(e.height)\r\n                                        : s),\r\n                                i &&\r\n                                    "image" == e.type &&\r\n                                    ((e._hasCustomWidth = !!i.dataset.width),\r\n                                    (e._hasCustomHeight = !!i.dataset.height)),\r\n                                e\r\n                            );\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "checkSize",\r\n                        value: function (e) {\r\n                            return M(e) ? "".concat(e, "px") : e;\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "sanitizeValue",\r\n                        value: function (e) {\r\n                            return "true" !== e && "false" !== e\r\n                                ? e\r\n                                : "true" === e;\r\n                        },\r\n                    },\r\n                ]),\r\n                e\r\n            );\r\n        })(),\r\n        U = (function () {\r\n            function e(i, n, s) {\r\n                t(this, e),\r\n                    (this.element = i),\r\n                    (this.instance = n),\r\n                    (this.index = s);\r\n            }\r\n            return (\r\n                n(e, [\r\n                    {\r\n                        key: "setContent",\r\n                        value: function () {\r\n                            var e = this,\r\n                                t =\r\n                                    arguments.length > 0 &&\r\n                                    void 0 !== arguments[0]\r\n                                        ? arguments[0]\r\n                                        : null,\r\n                                i =\r\n                                    arguments.length > 1 &&\r\n                                    void 0 !== arguments[1] &&\r\n                                    arguments[1];\r\n                            if (c(t, "loaded")) return !1;\r\n                            var n = this.instance.settings,\r\n                                s = this.slideConfig,\r\n                                l = w();\r\n                            T(n.beforeSlideLoad) &&\r\n                                n.beforeSlideLoad({\r\n                                    index: this.index,\r\n                                    slide: t,\r\n                                    player: !1,\r\n                                });\r\n                            var o = s.type,\r\n                                r = s.descPosition,\r\n                                a = t.querySelector(".gslide-media"),\r\n                                d = t.querySelector(".gslide-title"),\r\n                                u = t.querySelector(".gslide-desc"),\r\n                                g = t.querySelector(".gdesc-inner"),\r\n                                v = i,\r\n                                f = "gSlideTitle_" + this.index,\r\n                                p = "gSlideDesc_" + this.index;\r\n                            if (\r\n                                (T(n.afterSlideLoad) &&\r\n                                    (v = function () {\r\n                                        T(i) && i(),\r\n                                            n.afterSlideLoad({\r\n                                                index: e.index,\r\n                                                slide: t,\r\n                                                player: e.instance.getSlidePlayerInstance(\r\n                                                    e.index\r\n                                                ),\r\n                                            });\r\n                                    }),\r\n                                "" == s.title && "" == s.description\r\n                                    ? g &&\r\n                                      g.parentNode.parentNode.removeChild(\r\n                                          g.parentNode\r\n                                      )\r\n                                    : (d && "" !== s.title\r\n                                          ? ((d.id = f),\r\n                                            (d.innerHTML = s.title))\r\n                                          : d.parentNode.removeChild(d),\r\n                                      u && "" !== s.description\r\n                                          ? ((u.id = p),\r\n                                            l && n.moreLength > 0\r\n                                                ? ((s.smallDescription =\r\n                                                      this.slideShortDesc(\r\n                                                          s.description,\r\n                                                          n.moreLength,\r\n                                                          n.moreText\r\n                                                      )),\r\n                                                  (u.innerHTML =\r\n                                                      s.smallDescription),\r\n                                                  this.descriptionEvents(u, s))\r\n                                                : (u.innerHTML = s.description))\r\n                                          : u.parentNode.removeChild(u),\r\n                                      h(a.parentNode, "desc-".concat(r)),\r\n                                      h(\r\n                                          g.parentNode,\r\n                                          "description-".concat(r)\r\n                                      )),\r\n                                h(a, "gslide-".concat(o)),\r\n                                h(t, "loaded"),\r\n                                "video" !== o)\r\n                            ) {\r\n                                if ("external" !== o)\r\n                                    return "inline" === o\r\n                                        ? (G.apply(this.instance, [\r\n                                              t,\r\n                                              s,\r\n                                              this.index,\r\n                                              v,\r\n                                          ]),\r\n                                          void (\r\n                                              s.draggable &&\r\n                                              new V({\r\n                                                  dragEl: t.querySelector(\r\n                                                      ".gslide-inline"\r\n                                                  ),\r\n                                                  toleranceX: n.dragToleranceX,\r\n                                                  toleranceY: n.dragToleranceY,\r\n                                                  slide: t,\r\n                                                  instance: this.instance,\r\n                                              })\r\n                                          ))\r\n                                        : void ("image" !== o\r\n                                              ? T(v) && v()\r\n                                              : j(\r\n                                                    t,\r\n                                                    s,\r\n                                                    this.index,\r\n                                                    function () {\r\n                                                        var i =\r\n                                                            t.querySelector(\r\n                                                                "img"\r\n                                                            );\r\n                                                        s.draggable &&\r\n                                                            new V({\r\n                                                                dragEl: i,\r\n                                                                toleranceX:\r\n                                                                    n.dragToleranceX,\r\n                                                                toleranceY:\r\n                                                                    n.dragToleranceY,\r\n                                                                slide: t,\r\n                                                                instance:\r\n                                                                    e.instance,\r\n                                                            }),\r\n                                                            s.zoomable &&\r\n                                                                i.naturalWidth >\r\n                                                                    i.offsetWidth &&\r\n                                                                (h(\r\n                                                                    i,\r\n                                                                    "zoomable"\r\n                                                                ),\r\n                                                                new H(\r\n                                                                    i,\r\n                                                                    t,\r\n                                                                    function () {\r\n                                                                        e.instance.resize();\r\n                                                                    }\r\n                                                                )),\r\n                                                            T(v) && v();\r\n                                                    }\r\n                                                ));\r\n                                Z.apply(this, [t, s, this.index, v]);\r\n                            } else\r\n                                F.apply(this.instance, [t, s, this.index, v]);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "slideShortDesc",\r\n                        value: function (e) {\r\n                            var t =\r\n                                    arguments.length > 1 &&\r\n                                    void 0 !== arguments[1]\r\n                                        ? arguments[1]\r\n                                        : 50,\r\n                                i =\r\n                                    arguments.length > 2 &&\r\n                                    void 0 !== arguments[2] &&\r\n                                    arguments[2],\r\n                                n = document.createElement("div");\r\n                            n.innerHTML = e;\r\n                            var s = n.innerText,\r\n                                l = i;\r\n                            if ((e = s.trim()).length <= t) return e;\r\n                            var o = e.substr(0, t - 1);\r\n                            return l\r\n                                ? ((n = null),\r\n                                  o +\r\n                                      \'... <a href="#" class="desc-more">\' +\r\n                                      i +\r\n                                      "</a>")\r\n                                : o;\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "descriptionEvents",\r\n                        value: function (e, t) {\r\n                            var i = this,\r\n                                n = e.querySelector(".desc-more");\r\n                            if (!n) return !1;\r\n                            a("click", {\r\n                                onElement: n,\r\n                                withCallback: function (e, n) {\r\n                                    e.preventDefault();\r\n                                    var s = document.body,\r\n                                        l = u(n, ".gslide-desc");\r\n                                    if (!l) return !1;\r\n                                    (l.innerHTML = t.description),\r\n                                        h(s, "gdesc-open");\r\n                                    var o = a("click", {\r\n                                        onElement: [\r\n                                            s,\r\n                                            u(l, ".gslide-description"),\r\n                                        ],\r\n                                        withCallback: function (e, n) {\r\n                                            "a" !==\r\n                                                e.target.nodeName.toLowerCase() &&\r\n                                                (d(s, "gdesc-open"),\r\n                                                h(s, "gdesc-closed"),\r\n                                                (l.innerHTML =\r\n                                                    t.smallDescription),\r\n                                                i.descriptionEvents(l, t),\r\n                                                setTimeout(function () {\r\n                                                    d(s, "gdesc-closed");\r\n                                                }, 400),\r\n                                                o.destroy());\r\n                                        },\r\n                                    });\r\n                                },\r\n                            });\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "create",\r\n                        value: function () {\r\n                            return m(this.instance.settings.slideHTML);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "getConfig",\r\n                        value: function () {\r\n                            k(this.element) ||\r\n                                this.element.hasOwnProperty("draggable") ||\r\n                                (this.element.draggable =\r\n                                    this.instance.settings.draggable);\r\n                            var e = new $(\r\n                                this.instance.settings.slideExtraAttributes\r\n                            );\r\n                            return (\r\n                                (this.slideConfig = e.parseConfig(\r\n                                    this.element,\r\n                                    this.instance.settings\r\n                                )),\r\n                                this.slideConfig\r\n                            );\r\n                        },\r\n                    },\r\n                ]),\r\n                e\r\n            );\r\n        })(),\r\n        J = w(),\r\n        K =\r\n            null !== w() ||\r\n            void 0 !== document.createTouch ||\r\n            "ontouchstart" in window ||\r\n            "onmsgesturechange" in window ||\r\n            navigator.msMaxTouchPoints,\r\n        Q = document.getElementsByTagName("html")[0],\r\n        ee = {\r\n            selector: ".glightbox",\r\n            elements: null,\r\n            skin: "clean",\r\n            theme: "clean",\r\n            closeButton: !0,\r\n            startAt: null,\r\n            autoplayVideos: !0,\r\n            autofocusVideos: !0,\r\n            descPosition: "bottom",\r\n            width: "900px",\r\n            height: "506px",\r\n            videosWidth: "960px",\r\n            beforeSlideChange: null,\r\n            afterSlideChange: null,\r\n            beforeSlideLoad: null,\r\n            afterSlideLoad: null,\r\n            slideInserted: null,\r\n            slideRemoved: null,\r\n            slideExtraAttributes: null,\r\n            onOpen: null,\r\n            onClose: null,\r\n            loop: !1,\r\n            zoomable: !0,\r\n            draggable: !0,\r\n            dragAutoSnap: !1,\r\n            dragToleranceX: 40,\r\n            dragToleranceY: 65,\r\n            preload: !0,\r\n            oneSlidePerOpen: !1,\r\n            touchNavigation: !0,\r\n            touchFollowAxis: !0,\r\n            keyboardNavigation: !0,\r\n            closeOnOutsideClick: !0,\r\n            plugins: !1,\r\n            plyr: {\r\n                css: "https://cdn.plyr.io/3.6.8/plyr.css",\r\n                js: "https://cdn.plyr.io/3.6.8/plyr.js",\r\n                config: {\r\n                    ratio: "16:9",\r\n                    fullscreen: { enabled: !0, iosNative: !0 },\r\n                    youtube: {\r\n                        noCookie: !0,\r\n                        rel: 0,\r\n                        showinfo: 0,\r\n                        iv_load_policy: 3,\r\n                    },\r\n                    vimeo: {\r\n                        byline: !1,\r\n                        portrait: !1,\r\n                        title: !1,\r\n                        transparent: !1,\r\n                    },\r\n                },\r\n            },\r\n            openEffect: "zoom",\r\n            closeEffect: "zoom",\r\n            slideEffect: "slide",\r\n            moreText: "See more",\r\n            moreLength: 60,\r\n            cssEfects: {\r\n                fade: { in: "fadeIn", out: "fadeOut" },\r\n                zoom: { in: "zoomIn", out: "zoomOut" },\r\n                slide: { in: "slideInRight", out: "slideOutLeft" },\r\n                slideBack: { in: "slideInLeft", out: "slideOutRight" },\r\n                none: { in: "none", out: "none" },\r\n            },\r\n            svg: {\r\n                close: \'<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 512 512" xml:space="preserve"><g><g><path d="M505.943,6.058c-8.077-8.077-21.172-8.077-29.249,0L6.058,476.693c-8.077,8.077-8.077,21.172,0,29.249C10.096,509.982,15.39,512,20.683,512c5.293,0,10.586-2.019,14.625-6.059L505.943,35.306C514.019,27.23,514.019,14.135,505.943,6.058z"/></g></g><g><g><path d="M505.942,476.694L35.306,6.059c-8.076-8.077-21.172-8.077-29.248,0c-8.077,8.076-8.077,21.171,0,29.248l470.636,470.636c4.038,4.039,9.332,6.058,14.625,6.058c5.293,0,10.587-2.019,14.624-6.057C514.018,497.866,514.018,484.771,505.942,476.694z"/></g></g></svg>\',\r\n                next: \'<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 477.175 477.175" xml:space="preserve"> <g><path d="M360.731,229.075l-225.1-225.1c-5.3-5.3-13.8-5.3-19.1,0s-5.3,13.8,0,19.1l215.5,215.5l-215.5,215.5c-5.3,5.3-5.3,13.8,0,19.1c2.6,2.6,6.1,4,9.5,4c3.4,0,6.9-1.3,9.5-4l225.1-225.1C365.931,242.875,365.931,234.275,360.731,229.075z"/></g></svg>\',\r\n                prev: \'<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 477.175 477.175" xml:space="preserve"><g><path d="M145.188,238.575l215.5-215.5c5.3-5.3,5.3-13.8,0-19.1s-13.8-5.3-19.1,0l-225.1,225.1c-5.3,5.3-5.3,13.8,0,19.1l225.1,225c2.6,2.6,6.1,4,9.5,4s6.9-1.3,9.5-4c5.3-5.3,5.3-13.8,0-19.1L145.188,238.575z"/></g></svg>\',\r\n            },\r\n            slideHTML:\r\n                \'<div class="gslide">\\n    <div class="gslide-inner-content">\\n        <div class="ginner-container">\\n            <div class="gslide-media">\\n            </div>\\n            <div class="gslide-description">\\n                <div class="gdesc-inner">\\n                    <h4 class="gslide-title"></h4>\\n                    <div class="gslide-desc"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\',\r\n            lightboxHTML:\r\n                \'<div id="glightbox-body" class="glightbox-container" tabindex="-1" role="dialog" aria-hidden="false">\\n    <div class="gloader visible"></div>\\n    <div class="goverlay"></div>\\n    <div class="gcontainer">\\n    <div id="glightbox-slider" class="gslider"></div>\\n    <button class="gclose gbtn" aria-label="Close" data-taborder="3">{closeSVG}</button>\\n    <button class="gprev gbtn" aria-label="Previous" data-taborder="2">{prevSVG}</button>\\n    <button class="gnext gbtn" aria-label="Next" data-taborder="1">{nextSVG}</button>\\n</div>\\n</div>\',\r\n        },\r\n        te = (function () {\r\n            function e() {\r\n                var i =\r\n                    arguments.length > 0 && void 0 !== arguments[0]\r\n                        ? arguments[0]\r\n                        : {};\r\n                t(this, e),\r\n                    (this.customOptions = i),\r\n                    (this.settings = l(ee, i)),\r\n                    (this.effectsClasses = this.getAnimationClasses()),\r\n                    (this.videoPlayers = {}),\r\n                    (this.apiEvents = []),\r\n                    (this.fullElementsList = !1);\r\n            }\r\n            return (\r\n                n(e, [\r\n                    {\r\n                        key: "init",\r\n                        value: function () {\r\n                            var e = this,\r\n                                t = this.getSelector();\r\n                            t &&\r\n                                (this.baseEvents = a("click", {\r\n                                    onElement: t,\r\n                                    withCallback: function (t, i) {\r\n                                        t.preventDefault(), e.open(i);\r\n                                    },\r\n                                })),\r\n                                (this.elements = this.getElements());\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "open",\r\n                        value: function () {\r\n                            var e =\r\n                                    arguments.length > 0 &&\r\n                                    void 0 !== arguments[0]\r\n                                        ? arguments[0]\r\n                                        : null,\r\n                                t =\r\n                                    arguments.length > 1 &&\r\n                                    void 0 !== arguments[1]\r\n                                        ? arguments[1]\r\n                                        : null;\r\n                            if (0 == this.elements.length) return !1;\r\n                            (this.activeSlide = null),\r\n                                (this.prevActiveSlideIndex = null),\r\n                                (this.prevActiveSlide = null);\r\n                            var i = M(t) ? t : this.settings.startAt;\r\n                            if (k(e)) {\r\n                                var n = e.getAttribute("data-gallery");\r\n                                n &&\r\n                                    ((this.fullElementsList = this.elements),\r\n                                    (this.elements = this.getGalleryElements(\r\n                                        this.elements,\r\n                                        n\r\n                                    ))),\r\n                                    I(i) &&\r\n                                        (i = this.getElementIndex(e)) < 0 &&\r\n                                        (i = 0);\r\n                            }\r\n                            M(i) || (i = 0),\r\n                                this.build(),\r\n                                g(\r\n                                    this.overlay,\r\n                                    "none" == this.settings.openEffect\r\n                                        ? "none"\r\n                                        : this.settings.cssEfects.fade.in\r\n                                );\r\n                            var s = document.body,\r\n                                l =\r\n                                    window.innerWidth -\r\n                                    document.documentElement.clientWidth;\r\n                            if (l > 0) {\r\n                                var o = document.createElement("style");\r\n                                (o.type = "text/css"),\r\n                                    (o.className = "gcss-styles"),\r\n                                    (o.innerText =\r\n                                        ".gscrollbar-fixer {margin-right: ".concat(\r\n                                            l,\r\n                                            "px}"\r\n                                        )),\r\n                                    document.head.appendChild(o),\r\n                                    h(s, "gscrollbar-fixer");\r\n                            }\r\n                            h(s, "glightbox-open"),\r\n                                h(Q, "glightbox-open"),\r\n                                J &&\r\n                                    (h(document.body, "glightbox-mobile"),\r\n                                    (this.settings.slideEffect = "slide")),\r\n                                this.showSlide(i, !0),\r\n                                1 == this.elements.length\r\n                                    ? (h(\r\n                                          this.prevButton,\r\n                                          "glightbox-button-hidden"\r\n                                      ),\r\n                                      h(\r\n                                          this.nextButton,\r\n                                          "glightbox-button-hidden"\r\n                                      ))\r\n                                    : (d(\r\n                                          this.prevButton,\r\n                                          "glightbox-button-hidden"\r\n                                      ),\r\n                                      d(\r\n                                          this.nextButton,\r\n                                          "glightbox-button-hidden"\r\n                                      )),\r\n                                (this.lightboxOpen = !0),\r\n                                this.trigger("open"),\r\n                                T(this.settings.onOpen) &&\r\n                                    this.settings.onOpen(),\r\n                                K && this.settings.touchNavigation && B(this),\r\n                                this.settings.keyboardNavigation && X(this);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "openAt",\r\n                        value: function () {\r\n                            var e =\r\n                                arguments.length > 0 && void 0 !== arguments[0]\r\n                                    ? arguments[0]\r\n                                    : 0;\r\n                            this.open(null, e);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "showSlide",\r\n                        value: function () {\r\n                            var e = this,\r\n                                t =\r\n                                    arguments.length > 0 &&\r\n                                    void 0 !== arguments[0]\r\n                                        ? arguments[0]\r\n                                        : 0,\r\n                                i =\r\n                                    arguments.length > 1 &&\r\n                                    void 0 !== arguments[1] &&\r\n                                    arguments[1];\r\n                            f(this.loader), (this.index = parseInt(t));\r\n                            var n =\r\n                                this.slidesContainer.querySelector(".current");\r\n                            n && d(n, "current"), this.slideAnimateOut();\r\n                            var s =\r\n                                this.slidesContainer.querySelectorAll(\r\n                                    ".gslide"\r\n                                )[t];\r\n                            if (c(s, "loaded"))\r\n                                this.slideAnimateIn(s, i), p(this.loader);\r\n                            else {\r\n                                f(this.loader);\r\n                                var l = this.elements[t],\r\n                                    o = {\r\n                                        index: this.index,\r\n                                        slide: s,\r\n                                        slideNode: s,\r\n                                        slideConfig: l.slideConfig,\r\n                                        slideIndex: this.index,\r\n                                        trigger: l.node,\r\n                                        player: null,\r\n                                    };\r\n                                this.trigger("slide_before_load", o),\r\n                                    l.instance.setContent(s, function () {\r\n                                        p(e.loader),\r\n                                            e.resize(),\r\n                                            e.slideAnimateIn(s, i),\r\n                                            e.trigger("slide_after_load", o);\r\n                                    });\r\n                            }\r\n                            (this.slideDescription = s.querySelector(\r\n                                ".gslide-description"\r\n                            )),\r\n                                (this.slideDescriptionContained =\r\n                                    this.slideDescription &&\r\n                                    c(\r\n                                        this.slideDescription.parentNode,\r\n                                        "gslide-media"\r\n                                    )),\r\n                                this.settings.preload &&\r\n                                    (this.preloadSlide(t + 1),\r\n                                    this.preloadSlide(t - 1)),\r\n                                this.updateNavigationClasses(),\r\n                                (this.activeSlide = s);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "preloadSlide",\r\n                        value: function (e) {\r\n                            var t = this;\r\n                            if (e < 0 || e > this.elements.length - 1)\r\n                                return !1;\r\n                            if (I(this.elements[e])) return !1;\r\n                            var i =\r\n                                this.slidesContainer.querySelectorAll(\r\n                                    ".gslide"\r\n                                )[e];\r\n                            if (c(i, "loaded")) return !1;\r\n                            var n = this.elements[e],\r\n                                s = n.type,\r\n                                l = {\r\n                                    index: e,\r\n                                    slide: i,\r\n                                    slideNode: i,\r\n                                    slideConfig: n.slideConfig,\r\n                                    slideIndex: e,\r\n                                    trigger: n.node,\r\n                                    player: null,\r\n                                };\r\n                            this.trigger("slide_before_load", l),\r\n                                "video" == s || "external" == s\r\n                                    ? setTimeout(function () {\r\n                                          n.instance.setContent(i, function () {\r\n                                              t.trigger("slide_after_load", l);\r\n                                          });\r\n                                      }, 200)\r\n                                    : n.instance.setContent(i, function () {\r\n                                          t.trigger("slide_after_load", l);\r\n                                      });\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "prevSlide",\r\n                        value: function () {\r\n                            this.goToSlide(this.index - 1);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "nextSlide",\r\n                        value: function () {\r\n                            this.goToSlide(this.index + 1);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "goToSlide",\r\n                        value: function () {\r\n                            var e =\r\n                                arguments.length > 0 &&\r\n                                void 0 !== arguments[0] &&\r\n                                arguments[0];\r\n                            if (\r\n                                ((this.prevActiveSlide = this.activeSlide),\r\n                                (this.prevActiveSlideIndex = this.index),\r\n                                !this.loop() &&\r\n                                    (e < 0 || e > this.elements.length - 1))\r\n                            )\r\n                                return !1;\r\n                            e < 0\r\n                                ? (e = this.elements.length - 1)\r\n                                : e >= this.elements.length && (e = 0),\r\n                                this.showSlide(e);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "insertSlide",\r\n                        value: function () {\r\n                            var e =\r\n                                    arguments.length > 0 &&\r\n                                    void 0 !== arguments[0]\r\n                                        ? arguments[0]\r\n                                        : {},\r\n                                t =\r\n                                    arguments.length > 1 &&\r\n                                    void 0 !== arguments[1]\r\n                                        ? arguments[1]\r\n                                        : -1;\r\n                            t < 0 && (t = this.elements.length);\r\n                            var i = new U(e, this, t),\r\n                                n = i.getConfig(),\r\n                                s = l({}, n),\r\n                                o = i.create(),\r\n                                r = this.elements.length - 1;\r\n                            (s.index = t),\r\n                                (s.node = !1),\r\n                                (s.instance = i),\r\n                                (s.slideConfig = n),\r\n                                this.elements.splice(t, 0, s);\r\n                            var a = null,\r\n                                h = null;\r\n                            if (this.slidesContainer) {\r\n                                if (t > r) this.slidesContainer.appendChild(o);\r\n                                else {\r\n                                    var d =\r\n                                        this.slidesContainer.querySelectorAll(\r\n                                            ".gslide"\r\n                                        )[t];\r\n                                    this.slidesContainer.insertBefore(o, d);\r\n                                }\r\n                                ((this.settings.preload &&\r\n                                    0 == this.index &&\r\n                                    0 == t) ||\r\n                                    this.index - 1 == t ||\r\n                                    this.index + 1 == t) &&\r\n                                    this.preloadSlide(t),\r\n                                    0 == this.index &&\r\n                                        0 == t &&\r\n                                        (this.index = 1),\r\n                                    this.updateNavigationClasses(),\r\n                                    (a =\r\n                                        this.slidesContainer.querySelectorAll(\r\n                                            ".gslide"\r\n                                        )[t]),\r\n                                    (h = this.getSlidePlayerInstance(t)),\r\n                                    (s.slideNode = a);\r\n                            }\r\n                            this.trigger("slide_inserted", {\r\n                                index: t,\r\n                                slide: a,\r\n                                slideNode: a,\r\n                                slideConfig: n,\r\n                                slideIndex: t,\r\n                                trigger: null,\r\n                                player: h,\r\n                            }),\r\n                                T(this.settings.slideInserted) &&\r\n                                    this.settings.slideInserted({\r\n                                        index: t,\r\n                                        slide: a,\r\n                                        player: h,\r\n                                    });\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "removeSlide",\r\n                        value: function () {\r\n                            var e =\r\n                                arguments.length > 0 && void 0 !== arguments[0]\r\n                                    ? arguments[0]\r\n                                    : -1;\r\n                            if (e < 0 || e > this.elements.length - 1)\r\n                                return !1;\r\n                            var t =\r\n                                this.slidesContainer &&\r\n                                this.slidesContainer.querySelectorAll(\r\n                                    ".gslide"\r\n                                )[e];\r\n                            t &&\r\n                                (this.getActiveSlideIndex() == e &&\r\n                                    (e == this.elements.length - 1\r\n                                        ? this.prevSlide()\r\n                                        : this.nextSlide()),\r\n                                t.parentNode.removeChild(t)),\r\n                                this.elements.splice(e, 1),\r\n                                this.trigger("slide_removed", e),\r\n                                T(this.settings.slideRemoved) &&\r\n                                    this.settings.slideRemoved(e);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "slideAnimateIn",\r\n                        value: function (e, t) {\r\n                            var i = this,\r\n                                n = e.querySelector(".gslide-media"),\r\n                                s = e.querySelector(".gslide-description"),\r\n                                l = {\r\n                                    index: this.prevActiveSlideIndex,\r\n                                    slide: this.prevActiveSlide,\r\n                                    slideNode: this.prevActiveSlide,\r\n                                    slideIndex: this.prevActiveSlide,\r\n                                    slideConfig: I(this.prevActiveSlideIndex)\r\n                                        ? null\r\n                                        : this.elements[\r\n                                              this.prevActiveSlideIndex\r\n                                          ].slideConfig,\r\n                                    trigger: I(this.prevActiveSlideIndex)\r\n                                        ? null\r\n                                        : this.elements[\r\n                                              this.prevActiveSlideIndex\r\n                                          ].node,\r\n                                    player: this.getSlidePlayerInstance(\r\n                                        this.prevActiveSlideIndex\r\n                                    ),\r\n                                },\r\n                                o = {\r\n                                    index: this.index,\r\n                                    slide: this.activeSlide,\r\n                                    slideNode: this.activeSlide,\r\n                                    slideConfig:\r\n                                        this.elements[this.index].slideConfig,\r\n                                    slideIndex: this.index,\r\n                                    trigger: this.elements[this.index].node,\r\n                                    player: this.getSlidePlayerInstance(\r\n                                        this.index\r\n                                    ),\r\n                                };\r\n                            if (\r\n                                (n.offsetWidth > 0 &&\r\n                                    s &&\r\n                                    (p(s), (s.style.display = "")),\r\n                                d(e, this.effectsClasses),\r\n                                t)\r\n                            )\r\n                                g(\r\n                                    e,\r\n                                    this.settings.cssEfects[\r\n                                        this.settings.openEffect\r\n                                    ].in,\r\n                                    function () {\r\n                                        i.settings.autoplayVideos &&\r\n                                            i.slidePlayerPlay(e),\r\n                                            i.trigger("slide_changed", {\r\n                                                prev: l,\r\n                                                current: o,\r\n                                            }),\r\n                                            T(i.settings.afterSlideChange) &&\r\n                                                i.settings.afterSlideChange.apply(\r\n                                                    i,\r\n                                                    [l, o]\r\n                                                );\r\n                                    }\r\n                                );\r\n                            else {\r\n                                var r = this.settings.slideEffect,\r\n                                    a =\r\n                                        "none" !== r\r\n                                            ? this.settings.cssEfects[r].in\r\n                                            : r;\r\n                                this.prevActiveSlideIndex > this.index &&\r\n                                    "slide" == this.settings.slideEffect &&\r\n                                    (a = this.settings.cssEfects.slideBack.in),\r\n                                    g(e, a, function () {\r\n                                        i.settings.autoplayVideos &&\r\n                                            i.slidePlayerPlay(e),\r\n                                            i.trigger("slide_changed", {\r\n                                                prev: l,\r\n                                                current: o,\r\n                                            }),\r\n                                            T(i.settings.afterSlideChange) &&\r\n                                                i.settings.afterSlideChange.apply(\r\n                                                    i,\r\n                                                    [l, o]\r\n                                                );\r\n                                    });\r\n                            }\r\n                            setTimeout(function () {\r\n                                i.resize(e);\r\n                            }, 100),\r\n                                h(e, "current");\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "slideAnimateOut",\r\n                        value: function () {\r\n                            if (!this.prevActiveSlide) return !1;\r\n                            var e = this.prevActiveSlide;\r\n                            d(e, this.effectsClasses), h(e, "prev");\r\n                            var t = this.settings.slideEffect,\r\n                                i =\r\n                                    "none" !== t\r\n                                        ? this.settings.cssEfects[t].out\r\n                                        : t;\r\n                            this.slidePlayerPause(e),\r\n                                this.trigger("slide_before_change", {\r\n                                    prev: {\r\n                                        index: this.prevActiveSlideIndex,\r\n                                        slide: this.prevActiveSlide,\r\n                                        slideNode: this.prevActiveSlide,\r\n                                        slideIndex: this.prevActiveSlideIndex,\r\n                                        slideConfig: I(\r\n                                            this.prevActiveSlideIndex\r\n                                        )\r\n                                            ? null\r\n                                            : this.elements[\r\n                                                  this.prevActiveSlideIndex\r\n                                              ].slideConfig,\r\n                                        trigger: I(this.prevActiveSlideIndex)\r\n                                            ? null\r\n                                            : this.elements[\r\n                                                  this.prevActiveSlideIndex\r\n                                              ].node,\r\n                                        player: this.getSlidePlayerInstance(\r\n                                            this.prevActiveSlideIndex\r\n                                        ),\r\n                                    },\r\n                                    current: {\r\n                                        index: this.index,\r\n                                        slide: this.activeSlide,\r\n                                        slideNode: this.activeSlide,\r\n                                        slideIndex: this.index,\r\n                                        slideConfig:\r\n                                            this.elements[this.index]\r\n                                                .slideConfig,\r\n                                        trigger: this.elements[this.index].node,\r\n                                        player: this.getSlidePlayerInstance(\r\n                                            this.index\r\n                                        ),\r\n                                    },\r\n                                }),\r\n                                T(this.settings.beforeSlideChange) &&\r\n                                    this.settings.beforeSlideChange.apply(\r\n                                        this,\r\n                                        [\r\n                                            {\r\n                                                index: this\r\n                                                    .prevActiveSlideIndex,\r\n                                                slide: this.prevActiveSlide,\r\n                                                player: this.getSlidePlayerInstance(\r\n                                                    this.prevActiveSlideIndex\r\n                                                ),\r\n                                            },\r\n                                            {\r\n                                                index: this.index,\r\n                                                slide: this.activeSlide,\r\n                                                player: this.getSlidePlayerInstance(\r\n                                                    this.index\r\n                                                ),\r\n                                            },\r\n                                        ]\r\n                                    ),\r\n                                this.prevActiveSlideIndex > this.index &&\r\n                                    "slide" == this.settings.slideEffect &&\r\n                                    (i = this.settings.cssEfects.slideBack.out),\r\n                                g(e, i, function () {\r\n                                    var t =\r\n                                            e.querySelector(\r\n                                                ".ginner-container"\r\n                                            ),\r\n                                        i = e.querySelector(".gslide-media"),\r\n                                        n = e.querySelector(\r\n                                            ".gslide-description"\r\n                                        );\r\n                                    (t.style.transform = ""),\r\n                                        (i.style.transform = ""),\r\n                                        d(i, "greset"),\r\n                                        (i.style.opacity = ""),\r\n                                        n && (n.style.opacity = ""),\r\n                                        d(e, "prev");\r\n                                });\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "getAllPlayers",\r\n                        value: function () {\r\n                            return this.videoPlayers;\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "getSlidePlayerInstance",\r\n                        value: function (e) {\r\n                            var t = "gvideo" + e,\r\n                                i = this.getAllPlayers();\r\n                            return !(!O(i, t) || !i[t]) && i[t];\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "stopSlideVideo",\r\n                        value: function (e) {\r\n                            if (k(e)) {\r\n                                var t = e.querySelector(".gvideo-wrapper");\r\n                                t && (e = t.getAttribute("data-index"));\r\n                            }\r\n                            console.log(\r\n                                "stopSlideVideo is deprecated, use slidePlayerPause"\r\n                            );\r\n                            var i = this.getSlidePlayerInstance(e);\r\n                            i && i.playing && i.pause();\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "slidePlayerPause",\r\n                        value: function (e) {\r\n                            if (k(e)) {\r\n                                var t = e.querySelector(".gvideo-wrapper");\r\n                                t && (e = t.getAttribute("data-index"));\r\n                            }\r\n                            var i = this.getSlidePlayerInstance(e);\r\n                            i && i.playing && i.pause();\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "playSlideVideo",\r\n                        value: function (e) {\r\n                            if (k(e)) {\r\n                                var t = e.querySelector(".gvideo-wrapper");\r\n                                t && (e = t.getAttribute("data-index"));\r\n                            }\r\n                            console.log(\r\n                                "playSlideVideo is deprecated, use slidePlayerPlay"\r\n                            );\r\n                            var i = this.getSlidePlayerInstance(e);\r\n                            i && !i.playing && i.play();\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "slidePlayerPlay",\r\n                        value: function (e) {\r\n                            if (k(e)) {\r\n                                var t = e.querySelector(".gvideo-wrapper");\r\n                                t && (e = t.getAttribute("data-index"));\r\n                            }\r\n                            var i = this.getSlidePlayerInstance(e);\r\n                            i &&\r\n                                !i.playing &&\r\n                                (i.play(),\r\n                                this.settings.autofocusVideos &&\r\n                                    i.elements.container.focus());\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "setElements",\r\n                        value: function (e) {\r\n                            var t = this;\r\n                            this.settings.elements = !1;\r\n                            var i = [];\r\n                            e &&\r\n                                e.length &&\r\n                                o(e, function (e, n) {\r\n                                    var s = new U(e, t, n),\r\n                                        o = s.getConfig(),\r\n                                        r = l({}, o);\r\n                                    (r.slideConfig = o),\r\n                                        (r.instance = s),\r\n                                        (r.index = n),\r\n                                        i.push(r);\r\n                                }),\r\n                                (this.elements = i),\r\n                                this.lightboxOpen &&\r\n                                    ((this.slidesContainer.innerHTML = ""),\r\n                                    this.elements.length &&\r\n                                        (o(this.elements, function () {\r\n                                            var e = m(t.settings.slideHTML);\r\n                                            t.slidesContainer.appendChild(e);\r\n                                        }),\r\n                                        this.showSlide(0, !0)));\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "getElementIndex",\r\n                        value: function (e) {\r\n                            var t = !1;\r\n                            return (\r\n                                o(this.elements, function (i, n) {\r\n                                    if (O(i, "node") && i.node == e)\r\n                                        return (t = n), !0;\r\n                                }),\r\n                                t\r\n                            );\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "getElements",\r\n                        value: function () {\r\n                            var e = this,\r\n                                t = [];\r\n                            (this.elements = this.elements\r\n                                ? this.elements\r\n                                : []),\r\n                                !I(this.settings.elements) &&\r\n                                    E(this.settings.elements) &&\r\n                                    this.settings.elements.length &&\r\n                                    o(this.settings.elements, function (i, n) {\r\n                                        var s = new U(i, e, n),\r\n                                            o = s.getConfig(),\r\n                                            r = l({}, o);\r\n                                        (r.node = !1),\r\n                                            (r.index = n),\r\n                                            (r.instance = s),\r\n                                            (r.slideConfig = o),\r\n                                            t.push(r);\r\n                                    });\r\n                            var i = !1;\r\n                            return (\r\n                                this.getSelector() &&\r\n                                    (i = document.querySelectorAll(\r\n                                        this.getSelector()\r\n                                    )),\r\n                                i\r\n                                    ? (o(i, function (i, n) {\r\n                                          var s = new U(i, e, n),\r\n                                              o = s.getConfig(),\r\n                                              r = l({}, o);\r\n                                          (r.node = i),\r\n                                              (r.index = n),\r\n                                              (r.instance = s),\r\n                                              (r.slideConfig = o),\r\n                                              (r.gallery =\r\n                                                  i.getAttribute(\r\n                                                      "data-gallery"\r\n                                                  )),\r\n                                              t.push(r);\r\n                                      }),\r\n                                      t)\r\n                                    : t\r\n                            );\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "getGalleryElements",\r\n                        value: function (e, t) {\r\n                            return e.filter(function (e) {\r\n                                return e.gallery == t;\r\n                            });\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "getSelector",\r\n                        value: function () {\r\n                            return (\r\n                                !this.settings.elements &&\r\n                                (this.settings.selector &&\r\n                                "data-" ==\r\n                                    this.settings.selector.substring(0, 5)\r\n                                    ? "*[".concat(this.settings.selector, "]")\r\n                                    : this.settings.selector)\r\n                            );\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "getActiveSlide",\r\n                        value: function () {\r\n                            return this.slidesContainer.querySelectorAll(\r\n                                ".gslide"\r\n                            )[this.index];\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "getActiveSlideIndex",\r\n                        value: function () {\r\n                            return this.index;\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "getAnimationClasses",\r\n                        value: function () {\r\n                            var e = [];\r\n                            for (var t in this.settings.cssEfects)\r\n                                if (this.settings.cssEfects.hasOwnProperty(t)) {\r\n                                    var i = this.settings.cssEfects[t];\r\n                                    e.push("g".concat(i.in)),\r\n                                        e.push("g".concat(i.out));\r\n                                }\r\n                            return e.join(" ");\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "build",\r\n                        value: function () {\r\n                            var e = this;\r\n                            if (this.built) return !1;\r\n                            var t = document.body.childNodes,\r\n                                i = [];\r\n                            o(t, function (e) {\r\n                                e.parentNode == document.body &&\r\n                                    "#" !== e.nodeName.charAt(0) &&\r\n                                    e.hasAttribute &&\r\n                                    !e.hasAttribute("aria-hidden") &&\r\n                                    (i.push(e),\r\n                                    e.setAttribute("aria-hidden", "true"));\r\n                            });\r\n                            var n = O(this.settings.svg, "next")\r\n                                    ? this.settings.svg.next\r\n                                    : "",\r\n                                s = O(this.settings.svg, "prev")\r\n                                    ? this.settings.svg.prev\r\n                                    : "",\r\n                                l = O(this.settings.svg, "close")\r\n                                    ? this.settings.svg.close\r\n                                    : "",\r\n                                r = this.settings.lightboxHTML;\r\n                            (r = m(\r\n                                (r = (r = (r = r.replace(\r\n                                    /{nextSVG}/g,\r\n                                    n\r\n                                )).replace(/{prevSVG}/g, s)).replace(\r\n                                    /{closeSVG}/g,\r\n                                    l\r\n                                ))\r\n                            )),\r\n                                document.body.appendChild(r);\r\n                            var d = document.getElementById("glightbox-body");\r\n                            this.modal = d;\r\n                            var g = d.querySelector(".gclose");\r\n                            (this.prevButton = d.querySelector(".gprev")),\r\n                                (this.nextButton = d.querySelector(".gnext")),\r\n                                (this.overlay = d.querySelector(".goverlay")),\r\n                                (this.loader = d.querySelector(".gloader")),\r\n                                (this.slidesContainer =\r\n                                    document.getElementById(\r\n                                        "glightbox-slider"\r\n                                    )),\r\n                                (this.bodyHiddenChildElms = i),\r\n                                (this.events = {}),\r\n                                h(\r\n                                    this.modal,\r\n                                    "glightbox-" + this.settings.skin\r\n                                ),\r\n                                this.settings.closeButton &&\r\n                                    g &&\r\n                                    (this.events.close = a("click", {\r\n                                        onElement: g,\r\n                                        withCallback: function (t, i) {\r\n                                            t.preventDefault(), e.close();\r\n                                        },\r\n                                    })),\r\n                                g &&\r\n                                    !this.settings.closeButton &&\r\n                                    g.parentNode.removeChild(g),\r\n                                this.nextButton &&\r\n                                    (this.events.next = a("click", {\r\n                                        onElement: this.nextButton,\r\n                                        withCallback: function (t, i) {\r\n                                            t.preventDefault(), e.nextSlide();\r\n                                        },\r\n                                    })),\r\n                                this.prevButton &&\r\n                                    (this.events.prev = a("click", {\r\n                                        onElement: this.prevButton,\r\n                                        withCallback: function (t, i) {\r\n                                            t.preventDefault(), e.prevSlide();\r\n                                        },\r\n                                    })),\r\n                                this.settings.closeOnOutsideClick &&\r\n                                    (this.events.outClose = a("click", {\r\n                                        onElement: d,\r\n                                        withCallback: function (t, i) {\r\n                                            e.preventOutsideClick ||\r\n                                                c(\r\n                                                    document.body,\r\n                                                    "glightbox-mobile"\r\n                                                ) ||\r\n                                                u(\r\n                                                    t.target,\r\n                                                    ".ginner-container"\r\n                                                ) ||\r\n                                                u(t.target, ".gbtn") ||\r\n                                                c(t.target, "gnext") ||\r\n                                                c(t.target, "gprev") ||\r\n                                                e.close();\r\n                                        },\r\n                                    })),\r\n                                o(this.elements, function (t, i) {\r\n                                    e.slidesContainer.appendChild(\r\n                                        t.instance.create()\r\n                                    ),\r\n                                        (t.slideNode =\r\n                                            e.slidesContainer.querySelectorAll(\r\n                                                ".gslide"\r\n                                            )[i]);\r\n                                }),\r\n                                K && h(document.body, "glightbox-touch"),\r\n                                (this.events.resize = a("resize", {\r\n                                    onElement: window,\r\n                                    withCallback: function () {\r\n                                        e.resize();\r\n                                    },\r\n                                })),\r\n                                (this.built = !0);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "resize",\r\n                        value: function () {\r\n                            var e =\r\n                                arguments.length > 0 && void 0 !== arguments[0]\r\n                                    ? arguments[0]\r\n                                    : null;\r\n                            if (\r\n                                (e = e || this.activeSlide) &&\r\n                                !c(e, "zoomed")\r\n                            ) {\r\n                                var t = y(),\r\n                                    i = e.querySelector(".gvideo-wrapper"),\r\n                                    n = e.querySelector(".gslide-image"),\r\n                                    s = this.slideDescription,\r\n                                    l = t.width,\r\n                                    o = t.height;\r\n                                if (\r\n                                    (l <= 768\r\n                                        ? h(document.body, "glightbox-mobile")\r\n                                        : d(document.body, "glightbox-mobile"),\r\n                                    i || n)\r\n                                ) {\r\n                                    var r = !1;\r\n                                    if (\r\n                                        (s &&\r\n                                            (c(s, "description-bottom") ||\r\n                                                c(s, "description-top")) &&\r\n                                            !c(s, "gabsolute") &&\r\n                                            (r = !0),\r\n                                        n)\r\n                                    )\r\n                                        if (l <= 768) n.querySelector("img");\r\n                                        else if (r) {\r\n                                            var a = s.offsetHeight,\r\n                                                u = n.querySelector("img");\r\n                                            u.setAttribute(\r\n                                                "style",\r\n                                                "max-height: calc(100vh - ".concat(\r\n                                                    a,\r\n                                                    "px)"\r\n                                                )\r\n                                            ),\r\n                                                s.setAttribute(\r\n                                                    "style",\r\n                                                    "max-width: ".concat(\r\n                                                        u.offsetWidth,\r\n                                                        "px;"\r\n                                                    )\r\n                                                );\r\n                                        }\r\n                                    if (i) {\r\n                                        var g = O(\r\n                                            this.settings.plyr.config,\r\n                                            "ratio"\r\n                                        )\r\n                                            ? this.settings.plyr.config.ratio\r\n                                            : "";\r\n                                        if (!g) {\r\n                                            var v = i.clientWidth,\r\n                                                f = i.clientHeight,\r\n                                                p = v / f;\r\n                                            g = ""\r\n                                                .concat(v / p, ":")\r\n                                                .concat(f / p);\r\n                                        }\r\n                                        var m = g.split(":"),\r\n                                            x = this.settings.videosWidth,\r\n                                            b = this.settings.videosWidth,\r\n                                            S =\r\n                                                (b =\r\n                                                    M(x) ||\r\n                                                    -1 !== x.indexOf("px")\r\n                                                        ? parseInt(x)\r\n                                                        : -1 !== x.indexOf("vw")\r\n                                                        ? (l * parseInt(x)) /\r\n                                                          100\r\n                                                        : -1 !== x.indexOf("vh")\r\n                                                        ? (o * parseInt(x)) /\r\n                                                          100\r\n                                                        : -1 !== x.indexOf("%")\r\n                                                        ? (l * parseInt(x)) /\r\n                                                          100\r\n                                                        : parseInt(\r\n                                                              i.clientWidth\r\n                                                          )) /\r\n                                                (parseInt(m[0]) /\r\n                                                    parseInt(m[1]));\r\n                                        if (\r\n                                            ((S = Math.floor(S)),\r\n                                            r && (o -= s.offsetHeight),\r\n                                            b > l || S > o || (o < S && l > b))\r\n                                        ) {\r\n                                            var w = i.offsetWidth,\r\n                                                T = i.offsetHeight,\r\n                                                C = o / T,\r\n                                                k = {\r\n                                                    width: w * C,\r\n                                                    height: T * C,\r\n                                                };\r\n                                            i.parentNode.setAttribute(\r\n                                                "style",\r\n                                                "max-width: ".concat(\r\n                                                    k.width,\r\n                                                    "px"\r\n                                                )\r\n                                            ),\r\n                                                r &&\r\n                                                    s.setAttribute(\r\n                                                        "style",\r\n                                                        "max-width: ".concat(\r\n                                                            k.width,\r\n                                                            "px;"\r\n                                                        )\r\n                                                    );\r\n                                        } else\r\n                                            (i.parentNode.style.maxWidth =\r\n                                                "".concat(x)),\r\n                                                r &&\r\n                                                    s.setAttribute(\r\n                                                        "style",\r\n                                                        "max-width: ".concat(\r\n                                                            x,\r\n                                                            ";"\r\n                                                        )\r\n                                                    );\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "reload",\r\n                        value: function () {\r\n                            this.init();\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "updateNavigationClasses",\r\n                        value: function () {\r\n                            var e = this.loop();\r\n                            d(this.nextButton, "disabled"),\r\n                                d(this.prevButton, "disabled"),\r\n                                0 == this.index && this.elements.length - 1 == 0\r\n                                    ? (h(this.prevButton, "disabled"),\r\n                                      h(this.nextButton, "disabled"))\r\n                                    : 0 !== this.index || e\r\n                                    ? this.index !== this.elements.length - 1 ||\r\n                                      e ||\r\n                                      h(this.nextButton, "disabled")\r\n                                    : h(this.prevButton, "disabled");\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "loop",\r\n                        value: function () {\r\n                            var e = O(this.settings, "loopAtEnd")\r\n                                ? this.settings.loopAtEnd\r\n                                : null;\r\n                            return (\r\n                                (e = O(this.settings, "loop")\r\n                                    ? this.settings.loop\r\n                                    : e),\r\n                                e\r\n                            );\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "close",\r\n                        value: function () {\r\n                            var e = this;\r\n                            if (!this.lightboxOpen) {\r\n                                if (this.events) {\r\n                                    for (var t in this.events)\r\n                                        this.events.hasOwnProperty(t) &&\r\n                                            this.events[t].destroy();\r\n                                    this.events = null;\r\n                                }\r\n                                return !1;\r\n                            }\r\n                            if (this.closing) return !1;\r\n                            (this.closing = !0),\r\n                                this.slidePlayerPause(this.activeSlide),\r\n                                this.fullElementsList &&\r\n                                    (this.elements = this.fullElementsList),\r\n                                this.bodyHiddenChildElms.length &&\r\n                                    o(this.bodyHiddenChildElms, function (e) {\r\n                                        e.removeAttribute("aria-hidden");\r\n                                    }),\r\n                                h(this.modal, "glightbox-closing"),\r\n                                g(\r\n                                    this.overlay,\r\n                                    "none" == this.settings.openEffect\r\n                                        ? "none"\r\n                                        : this.settings.cssEfects.fade.out\r\n                                ),\r\n                                g(\r\n                                    this.activeSlide,\r\n                                    this.settings.cssEfects[\r\n                                        this.settings.closeEffect\r\n                                    ].out,\r\n                                    function () {\r\n                                        if (\r\n                                            ((e.activeSlide = null),\r\n                                            (e.prevActiveSlideIndex = null),\r\n                                            (e.prevActiveSlide = null),\r\n                                            (e.built = !1),\r\n                                            e.events)\r\n                                        ) {\r\n                                            for (var t in e.events)\r\n                                                e.events.hasOwnProperty(t) &&\r\n                                                    e.events[t].destroy();\r\n                                            e.events = null;\r\n                                        }\r\n                                        var i = document.body;\r\n                                        d(Q, "glightbox-open"),\r\n                                            d(\r\n                                                i,\r\n                                                "glightbox-open touching gdesc-open glightbox-touch glightbox-mobile gscrollbar-fixer"\r\n                                            ),\r\n                                            e.modal.parentNode.removeChild(\r\n                                                e.modal\r\n                                            ),\r\n                                            e.trigger("close"),\r\n                                            T(e.settings.onClose) &&\r\n                                                e.settings.onClose();\r\n                                        var n =\r\n                                            document.querySelector(\r\n                                                ".gcss-styles"\r\n                                            );\r\n                                        n && n.parentNode.removeChild(n),\r\n                                            (e.lightboxOpen = !1),\r\n                                            (e.closing = null);\r\n                                    }\r\n                                );\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "destroy",\r\n                        value: function () {\r\n                            this.close(),\r\n                                this.clearAllEvents(),\r\n                                this.baseEvents && this.baseEvents.destroy();\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "on",\r\n                        value: function (e, t) {\r\n                            var i =\r\n                                arguments.length > 2 &&\r\n                                void 0 !== arguments[2] &&\r\n                                arguments[2];\r\n                            if (!e || !T(t))\r\n                                throw new TypeError(\r\n                                    "Event name and callback must be defined"\r\n                                );\r\n                            this.apiEvents.push({\r\n                                evt: e,\r\n                                once: i,\r\n                                callback: t,\r\n                            });\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "once",\r\n                        value: function (e, t) {\r\n                            this.on(e, t, !0);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "trigger",\r\n                        value: function (e) {\r\n                            var t = this,\r\n                                i =\r\n                                    arguments.length > 1 &&\r\n                                    void 0 !== arguments[1]\r\n                                        ? arguments[1]\r\n                                        : null,\r\n                                n = [];\r\n                            o(this.apiEvents, function (t, s) {\r\n                                var l = t.evt,\r\n                                    o = t.once,\r\n                                    r = t.callback;\r\n                                l == e && (r(i), o && n.push(s));\r\n                            }),\r\n                                n.length &&\r\n                                    o(n, function (e) {\r\n                                        return t.apiEvents.splice(e, 1);\r\n                                    });\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "clearAllEvents",\r\n                        value: function () {\r\n                            this.apiEvents.splice(0, this.apiEvents.length);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: "version",\r\n                        value: function () {\r\n                            return "3.1.1";\r\n                        },\r\n                    },\r\n                ]),\r\n                e\r\n            );\r\n        })();\r\n    return function () {\r\n        var e =\r\n                arguments.length > 0 && void 0 !== arguments[0]\r\n                    ? arguments[0]\r\n                    : {},\r\n            t = new te(e);\r\n        return t.init(), t;\r\n    };\r\n});\r\n\n\n//# sourceURL=webpack://gulpstarter/./src/js/glightbox.js?')},"./src/js/lazyload.js":function srcJsLazyloadJs(){eval('const imgs = document.querySelectorAll(".lazy-img");\r\nconst lazierImgs = document.querySelectorAll(".lazier-img");\r\n\r\nconst loadImg = (entries, obs) => {\r\n    const [entry] = entries;\r\n\r\n    if (!entry.isIntersecting) return;\r\n\r\n    // replace src with data-src\r\n    entry.target.src = entry.target.dataset.src;\r\n    entry.target.addEventListener("load", () => {\r\n        entry.target.classList.remove("lazy-img");\r\n        entry.target.classList.remove("lazier-img");\r\n    });\r\n    obs.unobserve(entry.target);\r\n};\r\n\r\nconst imgObserver = new IntersectionObserver(loadImg, {\r\n    root: null,\r\n    threshold: 0.1,\r\n    rootMargin: "500px",\r\n});\r\n\r\nconst lazierObserver = new IntersectionObserver(loadImg, {\r\n    root: null,\r\n    threshold: 0.1,\r\n    rootMargin: "500px",\r\n});\r\n\r\nimgs.forEach((img) => imgObserver.observe(img));\r\nlazierImgs.forEach((img) => lazierObserver.observe(img));\r\n\n\n//# sourceURL=webpack://gulpstarter/./src/js/lazyload.js?')},"./src/js/main.js":function srcJsMainJs(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lazyload_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lazyload.js */ "./src/js/lazyload.js");\n/* harmony import */ var _lazyload_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lazyload_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _glightbox_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./glightbox.js */ "./src/js/glightbox.js");\n/* harmony import */ var _glightbox_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_glightbox_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _accordion_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./accordion.js */ "./src/js/accordion.js");\n/* harmony import */ var _accordion_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_accordion_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _counter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./counter.js */ "./src/js/counter.js");\n/* harmony import */ var _counter_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_counter_js__WEBPACK_IMPORTED_MODULE_3__);\n\r\n\r\n\r\n\r\n// import "./testimonials.js";\r\n\r\nconst togglerBtn = document.querySelector(".main-nav--toggler");\r\nconst linksContainer = document.querySelector(".main-nav__links-container");\r\nconst hamburgerLines = document.querySelectorAll(".main-nav--toggler-line");\r\nconst galleryItemsContainer = document.querySelectorAll(\r\n    ".section-gallery__content"\r\n);\r\nconst allNavLinks = [...document.querySelectorAll(".main-nav__links--link")];\r\nconst heroCtaBtn = document.querySelector(".hero__cta");\r\nconst izradaBtn = document.querySelector(".section-about__info--btn");\r\nconst heroSection = document.querySelector("#naslovnica");\r\nconst onamaSection = document.querySelector("#onama");\r\nconst izradaSection = document.querySelector("#izrada");\r\nconst proizvodiSection = document.querySelector("#proizvodi");\r\nconst kontaktSection = document.querySelector("#kontakt");\r\n\r\nconst allSections = [\r\n    heroSection,\r\n    onamaSection,\r\n    izradaSection,\r\n    proizvodiSection,\r\n    kontaktSection,\r\n];\r\nconst makeZiziHappy = (entries, obs) => {\r\n    const [entry] = entries;\r\n    const currentId = `#${entry.target.id}`;\r\n\r\n    if (entry.isIntersecting) {\r\n        allNavLinks.forEach((link) => link.classList.remove("active"));\r\n        if (\r\n            allNavLinks.some((link) => link.getAttribute("href") === currentId)\r\n        ) {\r\n            const index = allNavLinks.findIndex(\r\n                (link) => link.getAttribute("href") === currentId\r\n            );\r\n            allNavLinks[index].classList.add("active");\r\n        }\r\n    }\r\n};\r\nconst sectionObserver = new IntersectionObserver(makeZiziHappy, {\r\n    root: null,\r\n    threshold: 0.15,\r\n});\r\nallSections.forEach((sect) => {\r\n    sectionObserver.observe(sect);\r\n});\r\n\r\nallNavLinks.some(\r\n    (link) =>\r\n        link.classList.contains("active") && link.classList.remove("active")\r\n);\r\n\r\nconst lightbox = GLightbox({\r\n    touchNavigation: true,\r\n    selector: ".glightbox3",\r\n});\r\n\r\nheroCtaBtn.addEventListener("click", (e) => {\r\n    e.preventDefault();\r\n    document.querySelector("#onama").scrollIntoView({ behavior: "smooth" });\r\n});\r\n\r\nizradaBtn.addEventListener("click", (e) => {\r\n    e.preventDefault();\r\n    document.querySelector("#izrada").scrollIntoView({ behavior: "smooth" });\r\n});\r\n\r\ntogglerBtn.addEventListener("click", (e) => {\r\n    e.preventDefault();\r\n    hamburgerLines.forEach((el) => el.classList.toggle("active"));\r\n    linksContainer.classList.toggle("active");\r\n});\r\n\r\nlinksContainer.addEventListener("click", (e) => {\r\n    e.preventDefault();\r\n    const id = e.target.getAttribute("href");\r\n    document.querySelector(id).scrollIntoView({ behavior: "smooth" });\r\n});\r\n\r\nlinksContainer.addEventListener("click", (e) => {\r\n    e.preventDefault();\r\n    if ([...hamburgerLines].some((el) => el.classList.contains("active"))) {\r\n        hamburgerLines.forEach((el) => el.classList.remove("active"));\r\n        linksContainer.classList.remove("active");\r\n    }\r\n});\r\n\r\ngalleryItemsContainer.forEach((container) => {\r\n    const imagesCounts = [...container.querySelectorAll(".glightbox3")];\r\n    const span = container.querySelector(".section-gallery--item-count");\r\n\r\n    const DEFAULT_IMG_COUNT = 2;\r\n    if (span) {\r\n        const count = imagesCounts.length - DEFAULT_IMG_COUNT;\r\n        if (count > 0) {\r\n            span.textContent = `+${count}`;\r\n        }\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://gulpstarter/./src/js/main.js?')}},__webpack_module_cache__={};function __webpack_require__(n){var r=__webpack_module_cache__[n];return void 0!==r||(r=__webpack_module_cache__[n]={exports:{}},__webpack_modules__[n].call(r.exports,r,r.exports,__webpack_require__)),r.exports}__webpack_require__.n=function(n){var r=n&&n.__esModule?function(){return n.default}:function(){return n};return __webpack_require__.d(r,{a:r}),r},__webpack_require__.d=function(n,r){for(var e in r)__webpack_require__.o(r,e)&&!__webpack_require__.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:r[e]})},__webpack_require__.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},__webpack_require__.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/js/main.js")}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
